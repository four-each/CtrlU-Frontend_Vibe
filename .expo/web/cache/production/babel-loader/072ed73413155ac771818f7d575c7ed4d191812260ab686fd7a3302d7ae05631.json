{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}function _callSuper(t,o,e){return o=_getPrototypeOf(o),_possibleConstructorReturn(t,_isNativeReflectConstruct()?Reflect.construct(o,e||[],_getPrototypeOf(t).constructor):o.apply(t,e));}function _isNativeReflectConstruct(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));}catch(t){}return(_isNativeReflectConstruct=function _isNativeReflectConstruct(){return!!t;})();}import{Background,getDefaultHeaderHeight,SafeAreaProviderCompat}from'@react-navigation/elements';import Color from'color';import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import Platform from\"react-native-web/dist/exports/Platform\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import{forModalPresentationIOS,forNoAnimation as forNoAnimationCard}from\"../../TransitionConfigs/CardStyleInterpolators\";import{DefaultTransition,ModalFadeTransition,ModalTransition}from\"../../TransitionConfigs/TransitionPresets\";import findLastIndex from\"../../utils/findLastIndex\";import getDistanceForDirection from\"../../utils/getDistanceForDirection\";import{MaybeScreen,MaybeScreenContainer}from\"../Screens\";import{getIsModalPresentation}from\"./Card\";import CardContainer from\"./CardContainer\";var EPSILON=1e-5;var STATE_INACTIVE=0;var STATE_TRANSITIONING_OR_BELOW_TOP=1;var STATE_ON_TOP=2;var FALLBACK_DESCRIPTOR=Object.freeze({options:{}});var getInterpolationIndex=function getInterpolationIndex(scenes,index){var cardStyleInterpolator=scenes[index].descriptor.options.cardStyleInterpolator;var interpolationIndex=0;for(var i=index-1;i>=0;i--){var _scenes$i;var cardStyleInterpolatorCurrent=(_scenes$i=scenes[i])===null||_scenes$i===void 0?void 0:_scenes$i.descriptor.options.cardStyleInterpolator;if(cardStyleInterpolatorCurrent!==cardStyleInterpolator){break;}interpolationIndex++;}return interpolationIndex;};var getIsModal=function getIsModal(scene,interpolationIndex,isParentModal){if(isParentModal){return true;}var cardStyleInterpolator=scene.descriptor.options.cardStyleInterpolator;var isModalPresentation=getIsModalPresentation(cardStyleInterpolator);var isModal=isModalPresentation&&interpolationIndex!==0;return isModal;};var getHeaderHeights=function getHeaderHeights(scenes,insets,isParentHeaderShown,isParentModal,layout,previous){return scenes.reduce(function(acc,curr,index){var _curr$descriptor$opti=curr.descriptor.options,_curr$descriptor$opti2=_curr$descriptor$opti.headerStatusBarHeight,headerStatusBarHeight=_curr$descriptor$opti2===void 0?isParentHeaderShown?0:insets.top:_curr$descriptor$opti2,headerStyle=_curr$descriptor$opti.headerStyle;var style=StyleSheet.flatten(headerStyle||{});var height='height'in style&&typeof style.height==='number'?style.height:previous[curr.route.key];var interpolationIndex=getInterpolationIndex(scenes,index);var isModal=getIsModal(curr,interpolationIndex,isParentModal);acc[curr.route.key]=typeof height==='number'?height:getDefaultHeaderHeight(layout,isModal,headerStatusBarHeight);return acc;},{});};var getDistanceFromOptions=function getDistanceFromOptions(layout,descriptor){var _ref4=(descriptor===null||descriptor===void 0?void 0:descriptor.options)||{},presentation=_ref4.presentation,_ref4$gestureDirectio=_ref4.gestureDirection,gestureDirection=_ref4$gestureDirectio===void 0?presentation==='modal'?ModalTransition.gestureDirection:DefaultTransition.gestureDirection:_ref4$gestureDirectio;return getDistanceForDirection(layout,gestureDirection);};var getProgressFromGesture=function getProgressFromGesture(gesture,layout,descriptor){var distance=getDistanceFromOptions({width:Math.max(1,layout.width),height:Math.max(1,layout.height)},descriptor);if(distance>0){return gesture.interpolate({inputRange:[0,distance],outputRange:[1,0]});}return gesture.interpolate({inputRange:[distance,0],outputRange:[0,1]});};var CardStack=function(_React$Component){function CardStack(_props){var _this;_classCallCheck(this,CardStack);_this=_callSuper(this,CardStack,[_props]);_this.handleLayout=function(e){var _e$nativeEvent$layout=e.nativeEvent.layout,height=_e$nativeEvent$layout.height,width=_e$nativeEvent$layout.width;var layout={width:width,height:height};_this.setState(function(state,props){if(height===state.layout.height&&width===state.layout.width){return null;}return{layout:layout,headerHeights:getHeaderHeights(state.scenes,props.insets,props.isParentHeaderShown,props.isParentModal,layout,state.headerHeights)};});};_this.handleHeaderLayout=function(_ref){var route=_ref.route,height=_ref.height;_this.setState(function(_ref2){var headerHeights=_ref2.headerHeights;var previousHeight=headerHeights[route.key];if(previousHeight===height){return null;}return{headerHeights:_objectSpread(_objectSpread({},headerHeights),{},_defineProperty({},route.key,height))};});};_this.getFocusedRoute=function(){var state=_this.props.state;return state.routes[state.index];};_this.getPreviousScene=function(_ref3){var route=_ref3.route;var getPreviousRoute=_this.props.getPreviousRoute;var scenes=_this.state.scenes;var previousRoute=getPreviousRoute({route:route});if(previousRoute){var previousScene=scenes.find(function(scene){return scene.descriptor.route.key===previousRoute.key;});return previousScene;}return undefined;};_this.state={routes:[],scenes:[],gestures:{},layout:SafeAreaProviderCompat.initialMetrics.frame,descriptors:_this.props.descriptors,headerHeights:{}};return _this;}_inherits(CardStack,_React$Component);return _createClass(CardStack,[{key:\"render\",value:function render(){var _this2=this;var _this$props=this.props,insets=_this$props.insets,state=_this$props.state,routes=_this$props.routes,closingRouteKeys=_this$props.closingRouteKeys,onOpenRoute=_this$props.onOpenRoute,onCloseRoute=_this$props.onCloseRoute,renderHeader=_this$props.renderHeader,renderScene=_this$props.renderScene,isParentHeaderShown=_this$props.isParentHeaderShown,isParentModal=_this$props.isParentModal,onTransitionStart=_this$props.onTransitionStart,onTransitionEnd=_this$props.onTransitionEnd,onGestureStart=_this$props.onGestureStart,onGestureEnd=_this$props.onGestureEnd,onGestureCancel=_this$props.onGestureCancel,_this$props$detachIna=_this$props.detachInactiveScreens,detachInactiveScreens=_this$props$detachIna===void 0?Platform.OS==='web'||Platform.OS==='android'||Platform.OS==='ios':_this$props$detachIna;var _this$state=this.state,scenes=_this$state.scenes,layout=_this$state.layout,gestures=_this$state.gestures,headerHeights=_this$state.headerHeights;var focusedRoute=state.routes[state.index];var focusedHeaderHeight=headerHeights[focusedRoute.key];var isFloatHeaderAbsolute=this.state.scenes.slice(-2).some(function(scene){var _scene$descriptor$opt;var options=(_scene$descriptor$opt=scene.descriptor.options)!=null?_scene$descriptor$opt:{};var headerMode=options.headerMode,headerTransparent=options.headerTransparent,_options$headerShown=options.headerShown,headerShown=_options$headerShown===void 0?true:_options$headerShown;if(headerTransparent||headerShown===false||headerMode==='screen'){return true;}return false;});var activeScreensLimit=1;for(var i=scenes.length-1;i>=0;i--){var options=scenes[i].descriptor.options;var _options$detachPrevio=options.detachPreviousScreen,detachPreviousScreen=_options$detachPrevio===void 0?options.presentation==='transparentModal'?false:getIsModalPresentation(options.cardStyleInterpolator)?i!==findLastIndex(scenes,function(scene){var cardStyleInterpolator=scene.descriptor.options.cardStyleInterpolator;return cardStyleInterpolator===forModalPresentationIOS||(cardStyleInterpolator===null||cardStyleInterpolator===void 0?void 0:cardStyleInterpolator.name)==='forModalPresentationIOS';}):true:_options$detachPrevio;if(detachPreviousScreen===false){activeScreensLimit++;}else{if(i<=scenes.length-2){break;}}}var floatingHeader=React.createElement(React.Fragment,{key:\"header\"},renderHeader({mode:'float',layout:layout,scenes:scenes,getPreviousScene:this.getPreviousScene,getFocusedRoute:this.getFocusedRoute,onContentHeightChange:this.handleHeaderLayout,style:[styles.floating,isFloatHeaderAbsolute&&[{height:focusedHeaderHeight},styles.absolute]]}));return React.createElement(Background,null,isFloatHeaderAbsolute?null:floatingHeader,React.createElement(MaybeScreenContainer,{enabled:detachInactiveScreens,style:styles.container,onLayout:this.handleLayout},routes.map(function(route,index,self){var _scenes,_scenes2;var focused=focusedRoute.key===route.key;var gesture=gestures[route.key];var scene=scenes[index];var isScreenActive=1;if(index<self.length-activeScreensLimit-1){isScreenActive=STATE_INACTIVE;}else{var sceneForActivity=scenes[self.length-1];var outputValue=index===self.length-1?STATE_ON_TOP:index>=self.length-activeScreensLimit?STATE_TRANSITIONING_OR_BELOW_TOP:STATE_INACTIVE;isScreenActive=sceneForActivity?sceneForActivity.progress.current.interpolate({inputRange:[0,1-EPSILON,1],outputRange:[1,1,outputValue],extrapolate:'clamp'}):STATE_TRANSITIONING_OR_BELOW_TOP;}var _scene$descriptor$opt2=scene.descriptor.options,_scene$descriptor$opt3=_scene$descriptor$opt2.headerShown,headerShown=_scene$descriptor$opt3===void 0?true:_scene$descriptor$opt3,headerTransparent=_scene$descriptor$opt2.headerTransparent,headerStyle=_scene$descriptor$opt2.headerStyle,headerTintColor=_scene$descriptor$opt2.headerTintColor,freezeOnBlur=_scene$descriptor$opt2.freezeOnBlur;var safeAreaInsetTop=insets.top;var safeAreaInsetRight=insets.right;var safeAreaInsetBottom=insets.bottom;var safeAreaInsetLeft=insets.left;var headerHeight=headerShown!==false?headerHeights[route.key]:0;var headerDarkContent;if(headerShown){if(typeof headerTintColor==='string'){headerDarkContent=Color(headerTintColor).isDark();}else{var flattenedHeaderStyle=StyleSheet.flatten(headerStyle);if(flattenedHeaderStyle&&'backgroundColor'in flattenedHeaderStyle&&typeof flattenedHeaderStyle.backgroundColor==='string'){headerDarkContent=!Color(flattenedHeaderStyle.backgroundColor).isDark();}}}var interpolationIndex=getInterpolationIndex(scenes,index);var isModal=getIsModal(scene,interpolationIndex,isParentModal);var isNextScreenTransparent=((_scenes=scenes[index+1])===null||_scenes===void 0?void 0:_scenes.descriptor.options.presentation)==='transparentModal';var detachCurrentScreen=((_scenes2=scenes[index+1])===null||_scenes2===void 0?void 0:_scenes2.descriptor.options.detachPreviousScreen)!==false;return React.createElement(MaybeScreen,{key:route.key,style:StyleSheet.absoluteFill,enabled:detachInactiveScreens,active:isScreenActive,freezeOnBlur:freezeOnBlur,pointerEvents:\"box-none\"},React.createElement(CardContainer,{index:index,interpolationIndex:interpolationIndex,modal:isModal,active:index===self.length-1,focused:focused,closing:closingRouteKeys.includes(route.key),layout:layout,gesture:gesture,scene:scene,safeAreaInsetTop:safeAreaInsetTop,safeAreaInsetRight:safeAreaInsetRight,safeAreaInsetBottom:safeAreaInsetBottom,safeAreaInsetLeft:safeAreaInsetLeft,onGestureStart:onGestureStart,onGestureCancel:onGestureCancel,onGestureEnd:onGestureEnd,headerHeight:headerHeight,isParentHeaderShown:isParentHeaderShown,onHeaderHeightChange:_this2.handleHeaderLayout,getPreviousScene:_this2.getPreviousScene,getFocusedRoute:_this2.getFocusedRoute,headerDarkContent:headerDarkContent,hasAbsoluteFloatHeader:isFloatHeaderAbsolute&&!headerTransparent,renderHeader:renderHeader,renderScene:renderScene,onOpenRoute:onOpenRoute,onCloseRoute:onCloseRoute,onTransitionStart:onTransitionStart,onTransitionEnd:onTransitionEnd,isNextScreenTransparent:isNextScreenTransparent,detachCurrentScreen:detachCurrentScreen}));})),isFloatHeaderAbsolute?floatingHeader:null);}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.routes===state.routes&&props.descriptors===state.descriptors){return null;}var gestures=props.routes.reduce(function(acc,curr){var descriptor=props.descriptors[curr.key];var _ref5=(descriptor===null||descriptor===void 0?void 0:descriptor.options)||{},animationEnabled=_ref5.animationEnabled;acc[curr.key]=state.gestures[curr.key]||new Animated.Value(props.openingRouteKeys.includes(curr.key)&&animationEnabled!==false?getDistanceFromOptions(state.layout,descriptor):0);return acc;},{});var scenes=props.routes.map(function(route,index,self){var _descriptor$options$h;var previousRoute=self[index-1];var nextRoute=self[index+1];var oldScene=state.scenes[index];var currentGesture=gestures[route.key];var previousGesture=previousRoute?gestures[previousRoute.key]:undefined;var nextGesture=nextRoute?gestures[nextRoute.key]:undefined;var descriptor=props.descriptors[route.key]||state.descriptors[route.key]||(oldScene?oldScene.descriptor:FALLBACK_DESCRIPTOR);var nextDescriptor=props.descriptors[nextRoute===null||nextRoute===void 0?void 0:nextRoute.key]||state.descriptors[nextRoute===null||nextRoute===void 0?void 0:nextRoute.key];var previousDescriptor=props.descriptors[previousRoute===null||previousRoute===void 0?void 0:previousRoute.key]||state.descriptors[previousRoute===null||previousRoute===void 0?void 0:previousRoute.key];var optionsForTransitionConfig=index!==self.length-1&&nextDescriptor&&nextDescriptor.options.presentation!=='transparentModal'?nextDescriptor.options:descriptor.options;var defaultTransitionPreset=optionsForTransitionConfig.presentation==='modal'?ModalTransition:optionsForTransitionConfig.presentation==='transparentModal'?ModalFadeTransition:DefaultTransition;var _optionsForTransition=optionsForTransitionConfig.animationEnabled,animationEnabled=_optionsForTransition===void 0?Platform.OS!=='web'&&Platform.OS!=='windows'&&Platform.OS!=='macos':_optionsForTransition,_optionsForTransition2=optionsForTransitionConfig.gestureEnabled,gestureEnabled=_optionsForTransition2===void 0?Platform.OS==='ios'&&animationEnabled:_optionsForTransition2,_optionsForTransition3=optionsForTransitionConfig.gestureDirection,gestureDirection=_optionsForTransition3===void 0?defaultTransitionPreset.gestureDirection:_optionsForTransition3,_optionsForTransition4=optionsForTransitionConfig.transitionSpec,transitionSpec=_optionsForTransition4===void 0?defaultTransitionPreset.transitionSpec:_optionsForTransition4,_optionsForTransition5=optionsForTransitionConfig.cardStyleInterpolator,cardStyleInterpolator=_optionsForTransition5===void 0?animationEnabled===false?forNoAnimationCard:defaultTransitionPreset.cardStyleInterpolator:_optionsForTransition5,_optionsForTransition6=optionsForTransitionConfig.headerStyleInterpolator,headerStyleInterpolator=_optionsForTransition6===void 0?defaultTransitionPreset.headerStyleInterpolator:_optionsForTransition6,_optionsForTransition7=optionsForTransitionConfig.cardOverlayEnabled,cardOverlayEnabled=_optionsForTransition7===void 0?Platform.OS!=='ios'&&optionsForTransitionConfig.presentation!=='transparentModal'||getIsModalPresentation(cardStyleInterpolator):_optionsForTransition7;var headerMode=(_descriptor$options$h=descriptor.options.headerMode)!=null?_descriptor$options$h:!(optionsForTransitionConfig.presentation==='modal'||optionsForTransitionConfig.presentation==='transparentModal'||(nextDescriptor===null||nextDescriptor===void 0?void 0:nextDescriptor.options.presentation)==='modal'||(nextDescriptor===null||nextDescriptor===void 0?void 0:nextDescriptor.options.presentation)==='transparentModal'||getIsModalPresentation(cardStyleInterpolator))&&Platform.OS==='ios'&&descriptor.options.header===undefined?'float':'screen';var scene={route:route,descriptor:_objectSpread(_objectSpread({},descriptor),{},{options:_objectSpread(_objectSpread({},descriptor.options),{},{animationEnabled:animationEnabled,cardOverlayEnabled:cardOverlayEnabled,cardStyleInterpolator:cardStyleInterpolator,gestureDirection:gestureDirection,gestureEnabled:gestureEnabled,headerStyleInterpolator:headerStyleInterpolator,transitionSpec:transitionSpec,headerMode:headerMode})}),progress:{current:getProgressFromGesture(currentGesture,state.layout,descriptor),next:nextGesture&&(nextDescriptor===null||nextDescriptor===void 0?void 0:nextDescriptor.options.presentation)!=='transparentModal'?getProgressFromGesture(nextGesture,state.layout,nextDescriptor):undefined,previous:previousGesture?getProgressFromGesture(previousGesture,state.layout,previousDescriptor):undefined},__memo:[state.layout,descriptor,nextDescriptor,previousDescriptor,currentGesture,nextGesture,previousGesture]};if(oldScene&&scene.__memo.every(function(it,i){return oldScene.__memo[i]===it;})){return oldScene;}return scene;});return{routes:props.routes,scenes:scenes,gestures:gestures,descriptors:props.descriptors,headerHeights:getHeaderHeights(scenes,props.insets,props.isParentHeaderShown,props.isParentModal,state.layout,state.headerHeights)};}}]);}(React.Component);export{CardStack as default};var styles=StyleSheet.create({container:{flex:1},absolute:{position:'absolute',top:0,left:0,right:0},floating:{zIndex:1}});","map":{"version":3,"names":["Background","getDefaultHeaderHeight","SafeAreaProviderCompat","Color","React","Animated","Platform","StyleSheet","forModalPresentationIOS","forNoAnimation","forNoAnimationCard","DefaultTransition","ModalFadeTransition","ModalTransition","findLastIndex","getDistanceForDirection","MaybeScreen","MaybeScreenContainer","getIsModalPresentation","CardContainer","EPSILON","STATE_INACTIVE","STATE_TRANSITIONING_OR_BELOW_TOP","STATE_ON_TOP","FALLBACK_DESCRIPTOR","Object","freeze","options","getInterpolationIndex","scenes","index","cardStyleInterpolator","descriptor","interpolationIndex","i","_scenes$i","cardStyleInterpolatorCurrent","getIsModal","scene","isParentModal","isModalPresentation","isModal","getHeaderHeights","insets","isParentHeaderShown","layout","previous","reduce","acc","curr","_curr$descriptor$opti","_curr$descriptor$opti2","headerStatusBarHeight","top","headerStyle","style","flatten","height","route","key","getDistanceFromOptions","_ref4","presentation","_ref4$gestureDirectio","gestureDirection","getProgressFromGesture","gesture","distance","width","Math","max","interpolate","inputRange","outputRange","CardStack","_React$Component","props","_this","_classCallCheck","_callSuper","handleLayout","e","_e$nativeEvent$layout","nativeEvent","setState","state","headerHeights","handleHeaderLayout","_ref","_ref2","previousHeight","_objectSpread","_defineProperty","getFocusedRoute","routes","getPreviousScene","_ref3","getPreviousRoute","previousRoute","previousScene","find","undefined","gestures","initialMetrics","frame","descriptors","_inherits","_createClass","value","render","_this2","_this$props","closingRouteKeys","onOpenRoute","onCloseRoute","renderHeader","renderScene","onTransitionStart","onTransitionEnd","onGestureStart","onGestureEnd","onGestureCancel","_this$props$detachIna","detachInactiveScreens","OS","_this$state","focusedRoute","focusedHeaderHeight","isFloatHeaderAbsolute","slice","some","_scene$descriptor$opt","headerMode","headerTransparent","_options$headerShown","headerShown","activeScreensLimit","length","_options$detachPrevio","detachPreviousScreen","name","floatingHeader","createElement","Fragment","mode","onContentHeightChange","styles","floating","absolute","enabled","container","onLayout","map","self","_scenes","_scenes2","focused","isScreenActive","sceneForActivity","outputValue","progress","current","extrapolate","_scene$descriptor$opt2","_scene$descriptor$opt3","headerTintColor","freezeOnBlur","safeAreaInsetTop","safeAreaInsetRight","right","safeAreaInsetBottom","bottom","safeAreaInsetLeft","left","headerHeight","headerDarkContent","isDark","flattenedHeaderStyle","backgroundColor","isNextScreenTransparent","detachCurrentScreen","absoluteFill","active","pointerEvents","modal","closing","includes","onHeaderHeightChange","hasAbsoluteFloatHeader","getDerivedStateFromProps","_ref5","animationEnabled","Value","openingRouteKeys","_descriptor$options$h","nextRoute","oldScene","currentGesture","previousGesture","nextGesture","nextDescriptor","previousDescriptor","optionsForTransitionConfig","defaultTransitionPreset","_optionsForTransition","_optionsForTransition2","gestureEnabled","_optionsForTransition3","_optionsForTransition4","transitionSpec","_optionsForTransition5","_optionsForTransition6","headerStyleInterpolator","_optionsForTransition7","cardOverlayEnabled","header","next","__memo","every","it","Component","default","create","flex","position","zIndex"],"sources":["/Users/positive-yeon/Downloads/cursor-talk-to-figma-mcp-main/node_modules/@react-navigation/stack/src/views/Stack/CardStack.tsx"],"sourcesContent":["import {\n  Background,\n  getDefaultHeaderHeight,\n  SafeAreaProviderCompat,\n} from '@react-navigation/elements';\nimport type {\n  ParamListBase,\n  Route,\n  StackNavigationState,\n} from '@react-navigation/native';\nimport Color from 'color';\nimport * as React from 'react';\nimport {\n  Animated,\n  LayoutChangeEvent,\n  Platform,\n  StyleSheet,\n} from 'react-native';\nimport type { EdgeInsets } from 'react-native-safe-area-context';\n\nimport {\n  forModalPresentationIOS,\n  forNoAnimation as forNoAnimationCard,\n} from '../../TransitionConfigs/CardStyleInterpolators';\nimport {\n  DefaultTransition,\n  ModalFadeTransition,\n  ModalTransition,\n} from '../../TransitionConfigs/TransitionPresets';\nimport type {\n  Layout,\n  Scene,\n  StackDescriptor,\n  StackDescriptorMap,\n  StackHeaderMode,\n  StackNavigationOptions,\n} from '../../types';\nimport findLastIndex from '../../utils/findLastIndex';\nimport getDistanceForDirection from '../../utils/getDistanceForDirection';\nimport type { Props as HeaderContainerProps } from '../Header/HeaderContainer';\nimport { MaybeScreen, MaybeScreenContainer } from '../Screens';\nimport { getIsModalPresentation } from './Card';\nimport CardContainer from './CardContainer';\n\ntype GestureValues = {\n  [key: string]: Animated.Value;\n};\n\ntype Props = {\n  insets: EdgeInsets;\n  state: StackNavigationState<ParamListBase>;\n  descriptors: StackDescriptorMap;\n  routes: Route<string>[];\n  openingRouteKeys: string[];\n  closingRouteKeys: string[];\n  onOpenRoute: (props: { route: Route<string> }) => void;\n  onCloseRoute: (props: { route: Route<string> }) => void;\n  getPreviousRoute: (props: {\n    route: Route<string>;\n  }) => Route<string> | undefined;\n  renderHeader: (props: HeaderContainerProps) => React.ReactNode;\n  renderScene: (props: { route: Route<string> }) => React.ReactNode;\n  isParentHeaderShown: boolean;\n  isParentModal: boolean;\n  onTransitionStart: (\n    props: { route: Route<string> },\n    closing: boolean\n  ) => void;\n  onTransitionEnd: (props: { route: Route<string> }, closing: boolean) => void;\n  onGestureStart: (props: { route: Route<string> }) => void;\n  onGestureEnd: (props: { route: Route<string> }) => void;\n  onGestureCancel: (props: { route: Route<string> }) => void;\n  detachInactiveScreens?: boolean;\n};\n\ntype State = {\n  routes: Route<string>[];\n  descriptors: StackDescriptorMap;\n  scenes: Scene[];\n  gestures: GestureValues;\n  layout: Layout;\n  headerHeights: Record<string, number>;\n};\n\nconst EPSILON = 1e-5;\n\nconst STATE_INACTIVE = 0;\nconst STATE_TRANSITIONING_OR_BELOW_TOP = 1;\nconst STATE_ON_TOP = 2;\n\nconst FALLBACK_DESCRIPTOR = Object.freeze({ options: {} });\n\nconst getInterpolationIndex = (scenes: Scene[], index: number) => {\n  const { cardStyleInterpolator } = scenes[index].descriptor.options;\n\n  // Start from current card and count backwards the number of cards with same interpolation\n  let interpolationIndex = 0;\n\n  for (let i = index - 1; i >= 0; i--) {\n    const cardStyleInterpolatorCurrent =\n      scenes[i]?.descriptor.options.cardStyleInterpolator;\n\n    if (cardStyleInterpolatorCurrent !== cardStyleInterpolator) {\n      break;\n    }\n\n    interpolationIndex++;\n  }\n\n  return interpolationIndex;\n};\n\nconst getIsModal = (\n  scene: Scene,\n  interpolationIndex: number,\n  isParentModal: boolean\n) => {\n  if (isParentModal) {\n    return true;\n  }\n\n  const { cardStyleInterpolator } = scene.descriptor.options;\n  const isModalPresentation = getIsModalPresentation(cardStyleInterpolator);\n  const isModal = isModalPresentation && interpolationIndex !== 0;\n\n  return isModal;\n};\n\nconst getHeaderHeights = (\n  scenes: Scene[],\n  insets: EdgeInsets,\n  isParentHeaderShown: boolean,\n  isParentModal: boolean,\n  layout: Layout,\n  previous: Record<string, number>\n) => {\n  return scenes.reduce<Record<string, number>>((acc, curr, index) => {\n    const {\n      headerStatusBarHeight = isParentHeaderShown ? 0 : insets.top,\n      headerStyle,\n    } = curr.descriptor.options;\n\n    const style = StyleSheet.flatten(headerStyle || {});\n\n    const height =\n      'height' in style && typeof style.height === 'number'\n        ? style.height\n        : previous[curr.route.key];\n\n    const interpolationIndex = getInterpolationIndex(scenes, index);\n    const isModal = getIsModal(curr, interpolationIndex, isParentModal);\n\n    acc[curr.route.key] =\n      typeof height === 'number'\n        ? height\n        : getDefaultHeaderHeight(layout, isModal, headerStatusBarHeight);\n\n    return acc;\n  }, {});\n};\n\nconst getDistanceFromOptions = (\n  layout: Layout,\n  descriptor?: StackDescriptor\n) => {\n  const {\n    presentation,\n    gestureDirection = presentation === 'modal'\n      ? ModalTransition.gestureDirection\n      : DefaultTransition.gestureDirection,\n  } = (descriptor?.options || {}) as StackNavigationOptions;\n\n  return getDistanceForDirection(layout, gestureDirection);\n};\n\nconst getProgressFromGesture = (\n  gesture: Animated.Value,\n  layout: Layout,\n  descriptor?: StackDescriptor\n) => {\n  const distance = getDistanceFromOptions(\n    {\n      // Make sure that we have a non-zero distance, otherwise there will be incorrect progress\n      // This causes blank screen on web if it was previously inside container with display: none\n      width: Math.max(1, layout.width),\n      height: Math.max(1, layout.height),\n    },\n    descriptor\n  );\n\n  if (distance > 0) {\n    return gesture.interpolate({\n      inputRange: [0, distance],\n      outputRange: [1, 0],\n    });\n  }\n\n  return gesture.interpolate({\n    inputRange: [distance, 0],\n    outputRange: [0, 1],\n  });\n};\n\nexport default class CardStack extends React.Component<Props, State> {\n  static getDerivedStateFromProps(\n    props: Props,\n    state: State\n  ): Partial<State> | null {\n    if (\n      props.routes === state.routes &&\n      props.descriptors === state.descriptors\n    ) {\n      return null;\n    }\n\n    const gestures = props.routes.reduce<GestureValues>((acc, curr) => {\n      const descriptor = props.descriptors[curr.key];\n      const { animationEnabled } = descriptor?.options || {};\n\n      acc[curr.key] =\n        state.gestures[curr.key] ||\n        new Animated.Value(\n          props.openingRouteKeys.includes(curr.key) &&\n          animationEnabled !== false\n            ? getDistanceFromOptions(state.layout, descriptor)\n            : 0\n        );\n\n      return acc;\n    }, {});\n\n    const scenes = props.routes.map((route, index, self) => {\n      const previousRoute = self[index - 1];\n      const nextRoute = self[index + 1];\n\n      const oldScene = state.scenes[index];\n\n      const currentGesture = gestures[route.key];\n      const previousGesture = previousRoute\n        ? gestures[previousRoute.key]\n        : undefined;\n      const nextGesture = nextRoute ? gestures[nextRoute.key] : undefined;\n\n      const descriptor =\n        props.descriptors[route.key] ||\n        state.descriptors[route.key] ||\n        (oldScene ? oldScene.descriptor : FALLBACK_DESCRIPTOR);\n\n      const nextDescriptor =\n        props.descriptors[nextRoute?.key] || state.descriptors[nextRoute?.key];\n\n      const previousDescriptor =\n        props.descriptors[previousRoute?.key] ||\n        state.descriptors[previousRoute?.key];\n\n      // When a screen is not the last, it should use next screen's transition config\n      // Many transitions also animate the previous screen, so using 2 different transitions doesn't look right\n      // For example combining a slide and a modal transition would look wrong otherwise\n      // With this approach, combining different transition styles in the same navigator mostly looks right\n      // This will still be broken when 2 transitions have different idle state (e.g. modal presentation),\n      // but majority of the transitions look alright\n      const optionsForTransitionConfig =\n        index !== self.length - 1 &&\n        nextDescriptor &&\n        nextDescriptor.options.presentation !== 'transparentModal'\n          ? nextDescriptor.options\n          : descriptor.options;\n\n      let defaultTransitionPreset =\n        optionsForTransitionConfig.presentation === 'modal'\n          ? ModalTransition\n          : optionsForTransitionConfig.presentation === 'transparentModal'\n          ? ModalFadeTransition\n          : DefaultTransition;\n\n      const {\n        animationEnabled = Platform.OS !== 'web' &&\n          Platform.OS !== 'windows' &&\n          Platform.OS !== 'macos',\n        gestureEnabled = Platform.OS === 'ios' && animationEnabled,\n        gestureDirection = defaultTransitionPreset.gestureDirection,\n        transitionSpec = defaultTransitionPreset.transitionSpec,\n        cardStyleInterpolator = animationEnabled === false\n          ? forNoAnimationCard\n          : defaultTransitionPreset.cardStyleInterpolator,\n        headerStyleInterpolator = defaultTransitionPreset.headerStyleInterpolator,\n        cardOverlayEnabled = (Platform.OS !== 'ios' &&\n          optionsForTransitionConfig.presentation !== 'transparentModal') ||\n          getIsModalPresentation(cardStyleInterpolator),\n      } = optionsForTransitionConfig;\n\n      const headerMode: StackHeaderMode =\n        descriptor.options.headerMode ??\n        (!(\n          optionsForTransitionConfig.presentation === 'modal' ||\n          optionsForTransitionConfig.presentation === 'transparentModal' ||\n          nextDescriptor?.options.presentation === 'modal' ||\n          nextDescriptor?.options.presentation === 'transparentModal' ||\n          getIsModalPresentation(cardStyleInterpolator)\n        ) &&\n        Platform.OS === 'ios' &&\n        descriptor.options.header === undefined\n          ? 'float'\n          : 'screen');\n\n      const scene = {\n        route,\n        descriptor: {\n          ...descriptor,\n          options: {\n            ...descriptor.options,\n            animationEnabled,\n            cardOverlayEnabled,\n            cardStyleInterpolator,\n            gestureDirection,\n            gestureEnabled,\n            headerStyleInterpolator,\n            transitionSpec,\n            headerMode,\n          },\n        },\n        progress: {\n          current: getProgressFromGesture(\n            currentGesture,\n            state.layout,\n            descriptor\n          ),\n          next:\n            nextGesture &&\n            nextDescriptor?.options.presentation !== 'transparentModal'\n              ? getProgressFromGesture(\n                  nextGesture,\n                  state.layout,\n                  nextDescriptor\n                )\n              : undefined,\n          previous: previousGesture\n            ? getProgressFromGesture(\n                previousGesture,\n                state.layout,\n                previousDescriptor\n              )\n            : undefined,\n        },\n        __memo: [\n          state.layout,\n          descriptor,\n          nextDescriptor,\n          previousDescriptor,\n          currentGesture,\n          nextGesture,\n          previousGesture,\n        ],\n      };\n\n      if (\n        oldScene &&\n        scene.__memo.every((it, i) => {\n          // @ts-expect-error: we haven't added __memo to the annotation to prevent usage elsewhere\n          return oldScene.__memo[i] === it;\n        })\n      ) {\n        return oldScene;\n      }\n\n      return scene;\n    });\n\n    return {\n      routes: props.routes,\n      scenes,\n      gestures,\n      descriptors: props.descriptors,\n      headerHeights: getHeaderHeights(\n        scenes,\n        props.insets,\n        props.isParentHeaderShown,\n        props.isParentModal,\n        state.layout,\n        state.headerHeights\n      ),\n    };\n  }\n\n  constructor(props: Props) {\n    super(props);\n\n    this.state = {\n      routes: [],\n      scenes: [],\n      gestures: {},\n      layout: SafeAreaProviderCompat.initialMetrics.frame,\n      descriptors: this.props.descriptors,\n      // Used when card's header is null and mode is float to make transition\n      // between screens with headers and those without headers smooth.\n      // This is not a great heuristic here. We don't know synchronously\n      // on mount what the header height is so we have just used the most\n      // common cases here.\n      headerHeights: {},\n    };\n  }\n\n  private handleLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    const layout = { width, height };\n\n    this.setState((state, props) => {\n      if (height === state.layout.height && width === state.layout.width) {\n        return null;\n      }\n\n      return {\n        layout,\n        headerHeights: getHeaderHeights(\n          state.scenes,\n          props.insets,\n          props.isParentHeaderShown,\n          props.isParentModal,\n          layout,\n          state.headerHeights\n        ),\n      };\n    });\n  };\n\n  private handleHeaderLayout = ({\n    route,\n    height,\n  }: {\n    route: Route<string>;\n    height: number;\n  }) => {\n    this.setState(({ headerHeights }) => {\n      const previousHeight = headerHeights[route.key];\n\n      if (previousHeight === height) {\n        return null;\n      }\n\n      return {\n        headerHeights: {\n          ...headerHeights,\n          [route.key]: height,\n        },\n      };\n    });\n  };\n\n  private getFocusedRoute = () => {\n    const { state } = this.props;\n\n    return state.routes[state.index];\n  };\n\n  private getPreviousScene = ({ route }: { route: Route<string> }) => {\n    const { getPreviousRoute } = this.props;\n    const { scenes } = this.state;\n\n    const previousRoute = getPreviousRoute({ route });\n\n    if (previousRoute) {\n      const previousScene = scenes.find(\n        (scene) => scene.descriptor.route.key === previousRoute.key\n      );\n\n      return previousScene;\n    }\n\n    return undefined;\n  };\n\n  render() {\n    const {\n      insets,\n      state,\n      routes,\n      closingRouteKeys,\n      onOpenRoute,\n      onCloseRoute,\n      renderHeader,\n      renderScene,\n      isParentHeaderShown,\n      isParentModal,\n      onTransitionStart,\n      onTransitionEnd,\n      onGestureStart,\n      onGestureEnd,\n      onGestureCancel,\n      detachInactiveScreens = Platform.OS === 'web' ||\n        Platform.OS === 'android' ||\n        Platform.OS === 'ios',\n    } = this.props;\n\n    const { scenes, layout, gestures, headerHeights } = this.state;\n\n    const focusedRoute = state.routes[state.index];\n    const focusedHeaderHeight = headerHeights[focusedRoute.key];\n\n    const isFloatHeaderAbsolute = this.state.scenes.slice(-2).some((scene) => {\n      const options = scene.descriptor.options ?? {};\n      const { headerMode, headerTransparent, headerShown = true } = options;\n\n      if (\n        headerTransparent ||\n        headerShown === false ||\n        headerMode === 'screen'\n      ) {\n        return true;\n      }\n\n      return false;\n    });\n\n    let activeScreensLimit = 1;\n\n    for (let i = scenes.length - 1; i >= 0; i--) {\n      const { options } = scenes[i].descriptor;\n      const {\n        // By default, we don't want to detach the previous screen of the active one for modals\n        detachPreviousScreen = options.presentation === 'transparentModal'\n          ? false\n          : getIsModalPresentation(options.cardStyleInterpolator)\n          ? i !==\n            findLastIndex(scenes, (scene) => {\n              const { cardStyleInterpolator } = scene.descriptor.options;\n\n              return (\n                cardStyleInterpolator === forModalPresentationIOS ||\n                cardStyleInterpolator?.name === 'forModalPresentationIOS'\n              );\n            })\n          : true,\n      } = options;\n\n      if (detachPreviousScreen === false) {\n        activeScreensLimit++;\n      } else {\n        // Check at least last 2 screens before stopping\n        // This will make sure that screen isn't detached when another screen is animating on top of the transparent one\n        // For example, (Opaque -> Transparent -> Opaque)\n        if (i <= scenes.length - 2) {\n          break;\n        }\n      }\n    }\n\n    const floatingHeader = (\n      <React.Fragment key=\"header\">\n        {renderHeader({\n          mode: 'float',\n          layout,\n          scenes,\n          getPreviousScene: this.getPreviousScene,\n          getFocusedRoute: this.getFocusedRoute,\n          onContentHeightChange: this.handleHeaderLayout,\n          style: [\n            styles.floating,\n            isFloatHeaderAbsolute && [\n              // Without this, the header buttons won't be touchable on Android when headerTransparent: true\n              { height: focusedHeaderHeight },\n              styles.absolute,\n            ],\n          ],\n        })}\n      </React.Fragment>\n    );\n\n    return (\n      <Background>\n        {isFloatHeaderAbsolute ? null : floatingHeader}\n        <MaybeScreenContainer\n          enabled={detachInactiveScreens}\n          style={styles.container}\n          onLayout={this.handleLayout}\n        >\n          {routes.map((route, index, self) => {\n            const focused = focusedRoute.key === route.key;\n            const gesture = gestures[route.key];\n            const scene = scenes[index];\n\n            // For the screens that shouldn't be active, the value is 0\n            // For those that should be active, but are not the top screen, the value is 1\n            // For those on top of the stack and with interaction enabled, the value is 2\n            // For the old implementation, it stays the same it was\n            let isScreenActive:\n              | Animated.AnimatedInterpolation<0 | 1 | 2>\n              | 2\n              | 1\n              | 0 = 1;\n\n            if (index < self.length - activeScreensLimit - 1) {\n              // screen should be inactive because it is too deep in the stack\n              isScreenActive = STATE_INACTIVE;\n            } else {\n              const sceneForActivity = scenes[self.length - 1];\n              const outputValue =\n                index === self.length - 1\n                  ? STATE_ON_TOP // the screen is on top after the transition\n                  : index >= self.length - activeScreensLimit\n                  ? STATE_TRANSITIONING_OR_BELOW_TOP // the screen should stay active after the transition, it is not on top but is in activeLimit\n                  : STATE_INACTIVE; // the screen should be active only during the transition, it is at the edge of activeLimit\n              isScreenActive = sceneForActivity\n                ? sceneForActivity.progress.current.interpolate({\n                    inputRange: [0, 1 - EPSILON, 1],\n                    outputRange: [1, 1, outputValue],\n                    extrapolate: 'clamp',\n                  })\n                : STATE_TRANSITIONING_OR_BELOW_TOP;\n            }\n\n            const {\n              headerShown = true,\n              headerTransparent,\n              headerStyle,\n              headerTintColor,\n              freezeOnBlur,\n            } = scene.descriptor.options;\n\n            const safeAreaInsetTop = insets.top;\n            const safeAreaInsetRight = insets.right;\n            const safeAreaInsetBottom = insets.bottom;\n            const safeAreaInsetLeft = insets.left;\n\n            const headerHeight =\n              headerShown !== false ? headerHeights[route.key] : 0;\n\n            let headerDarkContent: boolean | undefined;\n\n            if (headerShown) {\n              if (typeof headerTintColor === 'string') {\n                headerDarkContent = Color(headerTintColor).isDark();\n              } else {\n                const flattenedHeaderStyle = StyleSheet.flatten(headerStyle);\n\n                if (\n                  flattenedHeaderStyle &&\n                  'backgroundColor' in flattenedHeaderStyle &&\n                  typeof flattenedHeaderStyle.backgroundColor === 'string'\n                ) {\n                  headerDarkContent = !Color(\n                    flattenedHeaderStyle.backgroundColor\n                  ).isDark();\n                }\n              }\n            }\n\n            // Start from current card and count backwards the number of cards with same interpolation\n            const interpolationIndex = getInterpolationIndex(scenes, index);\n            const isModal = getIsModal(\n              scene,\n              interpolationIndex,\n              isParentModal\n            );\n\n            const isNextScreenTransparent =\n              scenes[index + 1]?.descriptor.options.presentation ===\n              'transparentModal';\n\n            const detachCurrentScreen =\n              scenes[index + 1]?.descriptor.options.detachPreviousScreen !==\n              false;\n\n            return (\n              <MaybeScreen\n                key={route.key}\n                style={StyleSheet.absoluteFill}\n                enabled={detachInactiveScreens}\n                active={isScreenActive}\n                freezeOnBlur={freezeOnBlur}\n                pointerEvents=\"box-none\"\n              >\n                <CardContainer\n                  index={index}\n                  interpolationIndex={interpolationIndex}\n                  modal={isModal}\n                  active={index === self.length - 1}\n                  focused={focused}\n                  closing={closingRouteKeys.includes(route.key)}\n                  layout={layout}\n                  gesture={gesture}\n                  scene={scene}\n                  safeAreaInsetTop={safeAreaInsetTop}\n                  safeAreaInsetRight={safeAreaInsetRight}\n                  safeAreaInsetBottom={safeAreaInsetBottom}\n                  safeAreaInsetLeft={safeAreaInsetLeft}\n                  onGestureStart={onGestureStart}\n                  onGestureCancel={onGestureCancel}\n                  onGestureEnd={onGestureEnd}\n                  headerHeight={headerHeight}\n                  isParentHeaderShown={isParentHeaderShown}\n                  onHeaderHeightChange={this.handleHeaderLayout}\n                  getPreviousScene={this.getPreviousScene}\n                  getFocusedRoute={this.getFocusedRoute}\n                  headerDarkContent={headerDarkContent}\n                  hasAbsoluteFloatHeader={\n                    isFloatHeaderAbsolute && !headerTransparent\n                  }\n                  renderHeader={renderHeader}\n                  renderScene={renderScene}\n                  onOpenRoute={onOpenRoute}\n                  onCloseRoute={onCloseRoute}\n                  onTransitionStart={onTransitionStart}\n                  onTransitionEnd={onTransitionEnd}\n                  isNextScreenTransparent={isNextScreenTransparent}\n                  detachCurrentScreen={detachCurrentScreen}\n                />\n              </MaybeScreen>\n            );\n          })}\n        </MaybeScreenContainer>\n        {isFloatHeaderAbsolute ? floatingHeader : null}\n      </Background>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  absolute: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n  },\n  floating: {\n    zIndex: 1,\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}