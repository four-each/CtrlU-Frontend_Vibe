{"ast":null,"code":"import{useCallback}from'react';import{useAnimatedStyle}from\"./useAnimatedStyle\";export var useAnimatedProps=useAnimatedStyle;export function useWorkletCallback(fun,deps){return useCallback(fun,deps!=null?deps:[]);}export{useEvent,useHandler}from\"./utils\";","map":{"version":3,"names":["useCallback","useAnimatedStyle","useAnimatedProps","useWorkletCallback","fun","deps","useEvent","useHandler"],"sources":["/Users/positive-yeon/Downloads/cursor-talk-to-figma-mcp-main/node_modules/react-native-reanimated/lib/module/reanimated2/hook/Hooks.ts"],"sourcesContent":["import { useCallback } from 'react';\nimport { DependencyList } from './commonTypes';\nimport { useAnimatedStyle } from './useAnimatedStyle';\n\n// TODO: we should make sure that when useAP is used we are not assigning styles\n// when you need styles to animated you should always use useAS\nexport const useAnimatedProps = useAnimatedStyle;\n\nexport function useWorkletCallback<A extends unknown[], R>(\n  fun: (...args: A) => R,\n  deps?: DependencyList\n): (...args: Parameters<typeof fun>) => R {\n  return useCallback(fun, deps ?? []);\n}\n\nexport { useEvent, useHandler } from './utils';\n"],"mappings":"AAAA,OAASA,WAAW,KAAQ,OAAO,CAEnC,OAASC,gBAAgB,0BAIzB,MAAO,IAAM,CAAAC,gBAAgB,CAAGD,gBAAgB,CAEhD,MAAO,SAAS,CAAAE,kBAAkBA,CAChCC,GAAsB,CACtBC,IAAqB,CACmB,CACxC,MAAO,CAAAL,WAAW,CAACI,GAAG,CAAEC,IAAI,OAAJA,IAAI,CAAI,EAAE,CAAC,CACrC,CAEA,OAASC,QAAQ,CAAEC,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}