{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";var _excluded=[\"state\",\"descriptors\"];function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}function _callSuper(t,o,e){return o=_getPrototypeOf(o),_possibleConstructorReturn(t,_isNativeReflectConstruct()?Reflect.construct(o,e||[],_getPrototypeOf(t).constructor):o.apply(t,e));}function _isNativeReflectConstruct(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));}catch(t){}return(_isNativeReflectConstruct=function _isNativeReflectConstruct(){return!!t;})();}function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import{HeaderShownContext,SafeAreaProviderCompat}from'@react-navigation/elements';import{StackActions}from'@react-navigation/native';import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{SafeAreaInsetsContext}from'react-native-safe-area-context';import ModalPresentationContext from\"../../utils/ModalPresentationContext\";import{GestureHandlerRootView}from\"../GestureHandler\";import HeaderContainer from\"../Header/HeaderContainer\";import CardStack from\"./CardStack\";var GestureHandlerWrapper=GestureHandlerRootView!=null?GestureHandlerRootView:View;var isArrayEqual=function isArrayEqual(a,b){return a.length===b.length&&a.every(function(it,index){return it===b[index];});};var StackView=function(_React$Component){function StackView(){var _this;_classCallCheck(this,StackView);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_callSuper(this,StackView,[].concat(args));_this.state={routes:[],previousRoutes:[],previousDescriptors:{},openingRouteKeys:[],closingRouteKeys:[],replacingRouteKeys:[],descriptors:{}};_this.getPreviousRoute=function(_ref2){var route=_ref2.route;var _this$state=_this.state,closingRouteKeys=_this$state.closingRouteKeys,replacingRouteKeys=_this$state.replacingRouteKeys;var routes=_this.state.routes.filter(function(r){return r.key===route.key||!closingRouteKeys.includes(r.key)&&!replacingRouteKeys.includes(r.key);});var index=routes.findIndex(function(r){return r.key===route.key;});return routes[index-1];};_this.renderScene=function(_ref3){var route=_ref3.route;var descriptor=_this.state.descriptors[route.key]||_this.props.descriptors[route.key];if(!descriptor){return null;}return descriptor.render();};_this.renderHeader=function(props){return React.createElement(HeaderContainer,props);};_this.handleOpenRoute=function(_ref4){var route=_ref4.route;var _this$props=_this.props,state=_this$props.state,navigation=_this$props.navigation;var _this$state2=_this.state,closingRouteKeys=_this$state2.closingRouteKeys,replacingRouteKeys=_this$state2.replacingRouteKeys;if(closingRouteKeys.some(function(key){return key===route.key;})&&replacingRouteKeys.every(function(key){return key!==route.key;})&&state.routeNames.includes(route.name)&&!state.routes.some(function(r){return r.key===route.key;})){navigation.navigate(route);}else{_this.setState(function(state){return{routes:state.replacingRouteKeys.length?state.routes.filter(function(r){return!state.replacingRouteKeys.includes(r.key);}):state.routes,openingRouteKeys:state.openingRouteKeys.filter(function(key){return key!==route.key;}),closingRouteKeys:state.closingRouteKeys.filter(function(key){return key!==route.key;}),replacingRouteKeys:[]};});}};_this.handleCloseRoute=function(_ref5){var route=_ref5.route;var _this$props2=_this.props,state=_this$props2.state,navigation=_this$props2.navigation;if(state.routes.some(function(r){return r.key===route.key;})){navigation.dispatch(_objectSpread(_objectSpread({},StackActions.pop()),{},{source:route.key,target:state.key}));}else{_this.setState(function(state){return{routes:state.routes.filter(function(r){return r.key!==route.key;}),openingRouteKeys:state.openingRouteKeys.filter(function(key){return key!==route.key;}),closingRouteKeys:state.closingRouteKeys.filter(function(key){return key!==route.key;})};});}};_this.handleTransitionStart=function(_ref6,closing){var route=_ref6.route;return _this.props.navigation.emit({type:'transitionStart',data:{closing:closing},target:route.key});};_this.handleTransitionEnd=function(_ref7,closing){var route=_ref7.route;return _this.props.navigation.emit({type:'transitionEnd',data:{closing:closing},target:route.key});};_this.handleGestureStart=function(_ref8){var route=_ref8.route;_this.props.navigation.emit({type:'gestureStart',target:route.key});};_this.handleGestureEnd=function(_ref9){var route=_ref9.route;_this.props.navigation.emit({type:'gestureEnd',target:route.key});};_this.handleGestureCancel=function(_ref10){var route=_ref10.route;_this.props.navigation.emit({type:'gestureCancel',target:route.key});};return _this;}_inherits(StackView,_React$Component);return _createClass(StackView,[{key:\"render\",value:function render(){var _this2=this;var _this$props3=this.props,state=_this$props3.state,_=_this$props3.descriptors,rest=_objectWithoutProperties(_this$props3,_excluded);var _this$state3=this.state,routes=_this$state3.routes,descriptors=_this$state3.descriptors,openingRouteKeys=_this$state3.openingRouteKeys,closingRouteKeys=_this$state3.closingRouteKeys;return React.createElement(GestureHandlerWrapper,{style:styles.container},React.createElement(SafeAreaProviderCompat,null,React.createElement(SafeAreaInsetsContext.Consumer,null,function(insets){return React.createElement(ModalPresentationContext.Consumer,null,function(isParentModal){return React.createElement(HeaderShownContext.Consumer,null,function(isParentHeaderShown){return React.createElement(CardStack,_extends({insets:insets,isParentHeaderShown:isParentHeaderShown,isParentModal:isParentModal,getPreviousRoute:_this2.getPreviousRoute,routes:routes,openingRouteKeys:openingRouteKeys,closingRouteKeys:closingRouteKeys,onOpenRoute:_this2.handleOpenRoute,onCloseRoute:_this2.handleCloseRoute,onTransitionStart:_this2.handleTransitionStart,onTransitionEnd:_this2.handleTransitionEnd,renderHeader:_this2.renderHeader,renderScene:_this2.renderScene,state:state,descriptors:descriptors,onGestureStart:_this2.handleGestureStart,onGestureEnd:_this2.handleGestureEnd,onGestureCancel:_this2.handleGestureCancel},rest));});});})));}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if((props.state.routes===state.previousRoutes||isArrayEqual(props.state.routes.map(function(r){return r.key;}),state.previousRoutes.map(function(r){return r.key;})))&&state.routes.length){var _routes=state.routes;var _previousRoutes=state.previousRoutes;var _descriptors=props.descriptors;var previousDescriptors=state.previousDescriptors;if(props.descriptors!==state.previousDescriptors){_descriptors=state.routes.reduce(function(acc,route){acc[route.key]=props.descriptors[route.key]||state.descriptors[route.key];return acc;},{});previousDescriptors=props.descriptors;}if(props.state.routes!==state.previousRoutes){var map=props.state.routes.reduce(function(acc,route){acc[route.key]=route;return acc;},{});_routes=state.routes.map(function(route){return map[route.key]||route;});_previousRoutes=props.state.routes;}return{routes:_routes,previousRoutes:_previousRoutes,descriptors:_descriptors,previousDescriptors:previousDescriptors};}var routes=props.state.index<props.state.routes.length-1?props.state.routes.slice(0,props.state.index+1):props.state.routes;var openingRouteKeys=state.openingRouteKeys,closingRouteKeys=state.closingRouteKeys,replacingRouteKeys=state.replacingRouteKeys,previousRoutes=state.previousRoutes;var previousFocusedRoute=previousRoutes[previousRoutes.length-1];var nextFocusedRoute=routes[routes.length-1];var isAnimationEnabled=function isAnimationEnabled(key){var descriptor=props.descriptors[key]||state.descriptors[key];return descriptor?descriptor.options.animationEnabled!==false:true;};var getAnimationTypeForReplace=function getAnimationTypeForReplace(key){var _descriptor$options$a;var descriptor=props.descriptors[key]||state.descriptors[key];return(_descriptor$options$a=descriptor.options.animationTypeForReplace)!=null?_descriptor$options$a:'push';};if(previousFocusedRoute&&previousFocusedRoute.key!==nextFocusedRoute.key){if(!previousRoutes.some(function(r){return r.key===nextFocusedRoute.key;})){if(isAnimationEnabled(nextFocusedRoute.key)&&!openingRouteKeys.includes(nextFocusedRoute.key)){openingRouteKeys=[].concat(_toConsumableArray(openingRouteKeys),[nextFocusedRoute.key]);closingRouteKeys=closingRouteKeys.filter(function(key){return key!==nextFocusedRoute.key;});replacingRouteKeys=replacingRouteKeys.filter(function(key){return key!==nextFocusedRoute.key;});if(!routes.some(function(r){return r.key===previousFocusedRoute.key;})){openingRouteKeys=openingRouteKeys.filter(function(key){return key!==previousFocusedRoute.key;});if(getAnimationTypeForReplace(nextFocusedRoute.key)==='pop'){closingRouteKeys=[].concat(_toConsumableArray(closingRouteKeys),[previousFocusedRoute.key]);openingRouteKeys=openingRouteKeys.filter(function(key){return key!==nextFocusedRoute.key;});routes=[].concat(_toConsumableArray(routes),[previousFocusedRoute]);}else{replacingRouteKeys=[].concat(_toConsumableArray(replacingRouteKeys),[previousFocusedRoute.key]);closingRouteKeys=closingRouteKeys.filter(function(key){return key!==previousFocusedRoute.key;});routes=routes.slice();routes.splice(routes.length-1,0,previousFocusedRoute);}}}}else if(!routes.some(function(r){return r.key===previousFocusedRoute.key;})){if(isAnimationEnabled(previousFocusedRoute.key)&&!closingRouteKeys.includes(previousFocusedRoute.key)){closingRouteKeys=[].concat(_toConsumableArray(closingRouteKeys),[previousFocusedRoute.key]);openingRouteKeys=openingRouteKeys.filter(function(key){return key!==previousFocusedRoute.key;});replacingRouteKeys=replacingRouteKeys.filter(function(key){return key!==previousFocusedRoute.key;});routes=[].concat(_toConsumableArray(routes),[previousFocusedRoute]);}}else{}}else if(replacingRouteKeys.length||closingRouteKeys.length){var _routes2;routes=routes.slice();(_routes2=routes).splice.apply(_routes2,[routes.length-1,0].concat(_toConsumableArray(state.routes.filter(function(_ref){var key=_ref.key;return isAnimationEnabled(key)?replacingRouteKeys.includes(key)||closingRouteKeys.includes(key):false;}))));}if(!routes.length){throw new Error('There should always be at least one route in the navigation state.');}var descriptors=routes.reduce(function(acc,route){acc[route.key]=props.descriptors[route.key]||state.descriptors[route.key];return acc;},{});return{routes:routes,previousRoutes:props.state.routes,previousDescriptors:props.descriptors,openingRouteKeys:openingRouteKeys,closingRouteKeys:closingRouteKeys,replacingRouteKeys:replacingRouteKeys,descriptors:descriptors};}}]);}(React.Component);export{StackView as default};var styles=StyleSheet.create({container:{flex:1}});","map":{"version":3,"names":["HeaderShownContext","SafeAreaProviderCompat","StackActions","React","StyleSheet","View","SafeAreaInsetsContext","ModalPresentationContext","GestureHandlerRootView","HeaderContainer","CardStack","GestureHandlerWrapper","isArrayEqual","a","b","length","every","it","index","StackView","_React$Component","_this","_classCallCheck","_len","arguments","args","Array","_key","_callSuper","concat","state","routes","previousRoutes","previousDescriptors","openingRouteKeys","closingRouteKeys","replacingRouteKeys","descriptors","getPreviousRoute","_ref2","route","_this$state","filter","r","key","includes","findIndex","renderScene","_ref3","descriptor","props","render","renderHeader","createElement","handleOpenRoute","_ref4","_this$props","navigation","_this$state2","some","routeNames","name","navigate","setState","handleCloseRoute","_ref5","_this$props2","dispatch","_objectSpread","pop","source","target","handleTransitionStart","_ref6","closing","emit","type","data","handleTransitionEnd","_ref7","handleGestureStart","_ref8","handleGestureEnd","_ref9","handleGestureCancel","_ref10","_inherits","_createClass","value","_this2","_this$props3","_","rest","_objectWithoutProperties","_excluded","_this$state3","style","styles","container","Consumer","insets","isParentModal","isParentHeaderShown","_extends","onOpenRoute","onCloseRoute","onTransitionStart","onTransitionEnd","onGestureStart","onGestureEnd","onGestureCancel","getDerivedStateFromProps","map","reduce","acc","slice","previousFocusedRoute","nextFocusedRoute","isAnimationEnabled","options","animationEnabled","getAnimationTypeForReplace","_descriptor$options$a","animationTypeForReplace","_toConsumableArray","splice","_routes2","apply","_ref","Error","Component","default","create","flex"],"sources":["/Users/positive-yeon/Downloads/cursor-talk-to-figma-mcp-main/node_modules/@react-navigation/stack/src/views/Stack/StackView.tsx"],"sourcesContent":["import {\n  HeaderShownContext,\n  SafeAreaProviderCompat,\n} from '@react-navigation/elements';\nimport {\n  ParamListBase,\n  Route,\n  StackActions,\n  StackNavigationState,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport {\n  EdgeInsets,\n  SafeAreaInsetsContext,\n} from 'react-native-safe-area-context';\n\nimport type {\n  StackDescriptorMap,\n  StackNavigationConfig,\n  StackNavigationHelpers,\n} from '../../types';\nimport ModalPresentationContext from '../../utils/ModalPresentationContext';\nimport { GestureHandlerRootView } from '../GestureHandler';\nimport HeaderContainer, {\n  Props as HeaderContainerProps,\n} from '../Header/HeaderContainer';\nimport CardStack from './CardStack';\n\ntype Props = StackNavigationConfig & {\n  state: StackNavigationState<ParamListBase>;\n  navigation: StackNavigationHelpers;\n  descriptors: StackDescriptorMap;\n};\n\ntype State = {\n  // Local copy of the routes which are actually rendered\n  routes: Route<string>[];\n  // Previous routes, to compare whether routes have changed or not\n  previousRoutes: Route<string>[];\n  // Previous descriptors, to compare whether descriptors have changed or not\n  previousDescriptors: StackDescriptorMap;\n  // List of routes being opened, we need to animate pushing of these new routes\n  openingRouteKeys: string[];\n  // List of routes being closed, we need to animate popping of these routes\n  closingRouteKeys: string[];\n  // List of routes being replaced, we need to keep a copy until the new route animates in\n  replacingRouteKeys: string[];\n  // Since the local routes can vary from the routes from props, we need to keep the descriptors for old routes\n  // Otherwise we won't be able to access the options for routes that were removed\n  descriptors: StackDescriptorMap;\n};\n\nconst GestureHandlerWrapper = GestureHandlerRootView ?? View;\n\n/**\n * Compare two arrays with primitive values as the content.\n * We need to make sure that both values and order match.\n */\nconst isArrayEqual = (a: any[], b: any[]) =>\n  a.length === b.length && a.every((it, index) => it === b[index]);\n\nexport default class StackView extends React.Component<Props, State> {\n  static getDerivedStateFromProps(\n    props: Readonly<Props>,\n    state: Readonly<State>\n  ) {\n    // If there was no change in routes, we don't need to compute anything\n    if (\n      (props.state.routes === state.previousRoutes ||\n        isArrayEqual(\n          props.state.routes.map((r) => r.key),\n          state.previousRoutes.map((r) => r.key)\n        )) &&\n      state.routes.length\n    ) {\n      let routes = state.routes;\n      let previousRoutes = state.previousRoutes;\n      let descriptors = props.descriptors;\n      let previousDescriptors = state.previousDescriptors;\n\n      if (props.descriptors !== state.previousDescriptors) {\n        descriptors = state.routes.reduce<StackDescriptorMap>((acc, route) => {\n          acc[route.key] =\n            props.descriptors[route.key] || state.descriptors[route.key];\n\n          return acc;\n        }, {});\n\n        previousDescriptors = props.descriptors;\n      }\n\n      if (props.state.routes !== state.previousRoutes) {\n        // if any route objects have changed, we should update them\n        const map = props.state.routes.reduce<Record<string, Route<string>>>(\n          (acc, route) => {\n            acc[route.key] = route;\n            return acc;\n          },\n          {}\n        );\n\n        routes = state.routes.map((route) => map[route.key] || route);\n        previousRoutes = props.state.routes;\n      }\n\n      return {\n        routes,\n        previousRoutes,\n        descriptors,\n        previousDescriptors,\n      };\n    }\n\n    // Here we determine which routes were added or removed to animate them\n    // We keep a copy of the route being removed in local state to be able to animate it\n\n    let routes =\n      props.state.index < props.state.routes.length - 1\n        ? // Remove any extra routes from the state\n          // The last visible route should be the focused route, i.e. at current index\n          props.state.routes.slice(0, props.state.index + 1)\n        : props.state.routes;\n\n    // Now we need to determine which routes were added and removed\n    let {\n      openingRouteKeys,\n      closingRouteKeys,\n      replacingRouteKeys,\n      previousRoutes,\n    } = state;\n\n    const previousFocusedRoute = previousRoutes[previousRoutes.length - 1] as\n      | Route<string>\n      | undefined;\n    const nextFocusedRoute = routes[routes.length - 1];\n\n    const isAnimationEnabled = (key: string) => {\n      const descriptor = props.descriptors[key] || state.descriptors[key];\n\n      return descriptor ? descriptor.options.animationEnabled !== false : true;\n    };\n\n    const getAnimationTypeForReplace = (key: string) => {\n      const descriptor = props.descriptors[key] || state.descriptors[key];\n\n      return descriptor.options.animationTypeForReplace ?? 'push';\n    };\n\n    if (\n      previousFocusedRoute &&\n      previousFocusedRoute.key !== nextFocusedRoute.key\n    ) {\n      // We only need to animate routes if the focused route changed\n      // Animating previous routes won't be visible coz the focused route is on top of everything\n\n      if (!previousRoutes.some((r) => r.key === nextFocusedRoute.key)) {\n        // A new route has come to the focus, we treat this as a push\n        // A replace can also trigger this, the animation should look like push\n\n        if (\n          isAnimationEnabled(nextFocusedRoute.key) &&\n          !openingRouteKeys.includes(nextFocusedRoute.key)\n        ) {\n          // In this case, we need to animate pushing the focused route\n          // We don't care about animating any other added routes because they won't be visible\n          openingRouteKeys = [...openingRouteKeys, nextFocusedRoute.key];\n\n          closingRouteKeys = closingRouteKeys.filter(\n            (key) => key !== nextFocusedRoute.key\n          );\n          replacingRouteKeys = replacingRouteKeys.filter(\n            (key) => key !== nextFocusedRoute.key\n          );\n\n          if (!routes.some((r) => r.key === previousFocusedRoute.key)) {\n            // The previous focused route isn't present in state, we treat this as a replace\n\n            openingRouteKeys = openingRouteKeys.filter(\n              (key) => key !== previousFocusedRoute.key\n            );\n\n            if (getAnimationTypeForReplace(nextFocusedRoute.key) === 'pop') {\n              closingRouteKeys = [\n                ...closingRouteKeys,\n                previousFocusedRoute.key,\n              ];\n\n              // By default, new routes have a push animation, so we add it to `openingRouteKeys` before\n              // But since user configured it to animate the old screen like a pop, we need to add this without animation\n              // So remove it from `openingRouteKeys` which will remove the animation\n              openingRouteKeys = openingRouteKeys.filter(\n                (key) => key !== nextFocusedRoute.key\n              );\n\n              // Keep the route being removed at the end to animate it out\n              routes = [...routes, previousFocusedRoute];\n            } else {\n              replacingRouteKeys = [\n                ...replacingRouteKeys,\n                previousFocusedRoute.key,\n              ];\n\n              closingRouteKeys = closingRouteKeys.filter(\n                (key) => key !== previousFocusedRoute.key\n              );\n\n              // Keep the old route in the state because it's visible under the new route, and removing it will feel abrupt\n              // We need to insert it just before the focused one (the route being pushed)\n              // After the push animation is completed, routes being replaced will be removed completely\n              routes = routes.slice();\n              routes.splice(routes.length - 1, 0, previousFocusedRoute);\n            }\n          }\n        }\n      } else if (!routes.some((r) => r.key === previousFocusedRoute.key)) {\n        // The previously focused route was removed, we treat this as a pop\n\n        if (\n          isAnimationEnabled(previousFocusedRoute.key) &&\n          !closingRouteKeys.includes(previousFocusedRoute.key)\n        ) {\n          closingRouteKeys = [...closingRouteKeys, previousFocusedRoute.key];\n\n          // Sometimes a route can be closed before the opening animation finishes\n          // So we also need to remove it from the opening list\n          openingRouteKeys = openingRouteKeys.filter(\n            (key) => key !== previousFocusedRoute.key\n          );\n          replacingRouteKeys = replacingRouteKeys.filter(\n            (key) => key !== previousFocusedRoute.key\n          );\n\n          // Keep a copy of route being removed in the state to be able to animate it\n          routes = [...routes, previousFocusedRoute];\n        }\n      } else {\n        // Looks like some routes were re-arranged and no focused routes were added/removed\n        // i.e. the currently focused route already existed and the previously focused route still exists\n        // We don't know how to animate this\n      }\n    } else if (replacingRouteKeys.length || closingRouteKeys.length) {\n      // Keep the routes we are closing or replacing if animation is enabled for them\n      routes = routes.slice();\n      routes.splice(\n        routes.length - 1,\n        0,\n        ...state.routes.filter(({ key }) =>\n          isAnimationEnabled(key)\n            ? replacingRouteKeys.includes(key) || closingRouteKeys.includes(key)\n            : false\n        )\n      );\n    }\n\n    if (!routes.length) {\n      throw new Error(\n        'There should always be at least one route in the navigation state.'\n      );\n    }\n\n    const descriptors = routes.reduce<StackDescriptorMap>((acc, route) => {\n      acc[route.key] =\n        props.descriptors[route.key] || state.descriptors[route.key];\n\n      return acc;\n    }, {});\n\n    return {\n      routes,\n      previousRoutes: props.state.routes,\n      previousDescriptors: props.descriptors,\n      openingRouteKeys,\n      closingRouteKeys,\n      replacingRouteKeys,\n      descriptors,\n    };\n  }\n\n  state: State = {\n    routes: [],\n    previousRoutes: [],\n    previousDescriptors: {},\n    openingRouteKeys: [],\n    closingRouteKeys: [],\n    replacingRouteKeys: [],\n    descriptors: {},\n  };\n\n  private getPreviousRoute = ({ route }: { route: Route<string> }) => {\n    const { closingRouteKeys, replacingRouteKeys } = this.state;\n    const routes = this.state.routes.filter(\n      (r) =>\n        r.key === route.key ||\n        (!closingRouteKeys.includes(r.key) &&\n          !replacingRouteKeys.includes(r.key))\n    );\n\n    const index = routes.findIndex((r) => r.key === route.key);\n\n    return routes[index - 1];\n  };\n\n  private renderScene = ({ route }: { route: Route<string> }) => {\n    const descriptor =\n      this.state.descriptors[route.key] || this.props.descriptors[route.key];\n\n    if (!descriptor) {\n      return null;\n    }\n\n    return descriptor.render();\n  };\n\n  private renderHeader = (props: HeaderContainerProps) => {\n    return <HeaderContainer {...props} />;\n  };\n\n  private handleOpenRoute = ({ route }: { route: Route<string> }) => {\n    const { state, navigation } = this.props;\n    const { closingRouteKeys, replacingRouteKeys } = this.state;\n\n    if (\n      closingRouteKeys.some((key) => key === route.key) &&\n      replacingRouteKeys.every((key) => key !== route.key) &&\n      state.routeNames.includes(route.name) &&\n      !state.routes.some((r) => r.key === route.key)\n    ) {\n      // If route isn't present in current state, but was closing, assume that a close animation was cancelled\n      // So we need to add this route back to the state\n      navigation.navigate(route);\n    } else {\n      this.setState((state) => ({\n        routes: state.replacingRouteKeys.length\n          ? state.routes.filter(\n              (r) => !state.replacingRouteKeys.includes(r.key)\n            )\n          : state.routes,\n        openingRouteKeys: state.openingRouteKeys.filter(\n          (key) => key !== route.key\n        ),\n        closingRouteKeys: state.closingRouteKeys.filter(\n          (key) => key !== route.key\n        ),\n        replacingRouteKeys: [],\n      }));\n    }\n  };\n\n  private handleCloseRoute = ({ route }: { route: Route<string> }) => {\n    const { state, navigation } = this.props;\n\n    if (state.routes.some((r) => r.key === route.key)) {\n      // If a route exists in state, trigger a pop\n      // This will happen in when the route was closed from the card component\n      // e.g. When the close animation triggered from a gesture ends\n      navigation.dispatch({\n        ...StackActions.pop(),\n        source: route.key,\n        target: state.key,\n      });\n    } else {\n      // We need to clean up any state tracking the route and pop it immediately\n      this.setState((state) => ({\n        routes: state.routes.filter((r) => r.key !== route.key),\n        openingRouteKeys: state.openingRouteKeys.filter(\n          (key) => key !== route.key\n        ),\n        closingRouteKeys: state.closingRouteKeys.filter(\n          (key) => key !== route.key\n        ),\n      }));\n    }\n  };\n\n  private handleTransitionStart = (\n    { route }: { route: Route<string> },\n    closing: boolean\n  ) =>\n    this.props.navigation.emit({\n      type: 'transitionStart',\n      data: { closing },\n      target: route.key,\n    });\n\n  private handleTransitionEnd = (\n    { route }: { route: Route<string> },\n    closing: boolean\n  ) =>\n    this.props.navigation.emit({\n      type: 'transitionEnd',\n      data: { closing },\n      target: route.key,\n    });\n\n  private handleGestureStart = ({ route }: { route: Route<string> }) => {\n    this.props.navigation.emit({\n      type: 'gestureStart',\n      target: route.key,\n    });\n  };\n\n  private handleGestureEnd = ({ route }: { route: Route<string> }) => {\n    this.props.navigation.emit({\n      type: 'gestureEnd',\n      target: route.key,\n    });\n  };\n\n  private handleGestureCancel = ({ route }: { route: Route<string> }) => {\n    this.props.navigation.emit({\n      type: 'gestureCancel',\n      target: route.key,\n    });\n  };\n\n  render() {\n    const {\n      state,\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      descriptors: _,\n      ...rest\n    } = this.props;\n\n    const { routes, descriptors, openingRouteKeys, closingRouteKeys } =\n      this.state;\n\n    return (\n      <GestureHandlerWrapper style={styles.container}>\n        <SafeAreaProviderCompat>\n          <SafeAreaInsetsContext.Consumer>\n            {(insets) => (\n              <ModalPresentationContext.Consumer>\n                {(isParentModal) => (\n                  <HeaderShownContext.Consumer>\n                    {(isParentHeaderShown) => (\n                      <CardStack\n                        insets={insets as EdgeInsets}\n                        isParentHeaderShown={isParentHeaderShown}\n                        isParentModal={isParentModal}\n                        getPreviousRoute={this.getPreviousRoute}\n                        routes={routes}\n                        openingRouteKeys={openingRouteKeys}\n                        closingRouteKeys={closingRouteKeys}\n                        onOpenRoute={this.handleOpenRoute}\n                        onCloseRoute={this.handleCloseRoute}\n                        onTransitionStart={this.handleTransitionStart}\n                        onTransitionEnd={this.handleTransitionEnd}\n                        renderHeader={this.renderHeader}\n                        renderScene={this.renderScene}\n                        state={state}\n                        descriptors={descriptors}\n                        onGestureStart={this.handleGestureStart}\n                        onGestureEnd={this.handleGestureEnd}\n                        onGestureCancel={this.handleGestureCancel}\n                        {...rest}\n                      />\n                    )}\n                  </HeaderShownContext.Consumer>\n                )}\n              </ModalPresentationContext.Consumer>\n            )}\n          </SafeAreaInsetsContext.Consumer>\n        </SafeAreaProviderCompat>\n      </GestureHandlerWrapper>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}