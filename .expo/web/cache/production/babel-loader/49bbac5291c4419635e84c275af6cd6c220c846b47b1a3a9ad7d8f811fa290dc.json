{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}var EventManager=function(){function EventManager(view){_classCallCheck(this,EventManager);_defineProperty(this,\"view\",void 0);_defineProperty(this,\"pointersInBounds\",[]);_defineProperty(this,\"activePointersCounter\",void 0);this.view=view;this.activePointersCounter=0;}return _createClass(EventManager,[{key:\"onPointerDown\",value:function onPointerDown(_event){}},{key:\"onPointerAdd\",value:function onPointerAdd(_event){}},{key:\"onPointerUp\",value:function onPointerUp(_event){}},{key:\"onPointerRemove\",value:function onPointerRemove(_event){}},{key:\"onPointerMove\",value:function onPointerMove(_event){}},{key:\"onPointerOut\",value:function onPointerOut(_event){}},{key:\"onPointerEnter\",value:function onPointerEnter(_event){}},{key:\"onPointerCancel\",value:function onPointerCancel(_event){}},{key:\"onPointerOutOfBounds\",value:function onPointerOutOfBounds(_event){}},{key:\"setOnPointerDown\",value:function setOnPointerDown(callback){this.onPointerDown=callback;}},{key:\"setOnPointerAdd\",value:function setOnPointerAdd(callback){this.onPointerAdd=callback;}},{key:\"setOnPointerUp\",value:function setOnPointerUp(callback){this.onPointerUp=callback;}},{key:\"setOnPointerRemove\",value:function setOnPointerRemove(callback){this.onPointerRemove=callback;}},{key:\"setOnPointerMove\",value:function setOnPointerMove(callback){this.onPointerMove=callback;}},{key:\"setOnPointerOut\",value:function setOnPointerOut(callback){this.onPointerOut=callback;}},{key:\"setOnPointerEnter\",value:function setOnPointerEnter(callback){this.onPointerEnter=callback;}},{key:\"setOnPointerCancel\",value:function setOnPointerCancel(callback){this.onPointerCancel=callback;}},{key:\"setOnPointerOutOfBounds\",value:function setOnPointerOutOfBounds(callback){this.onPointerOutOfBounds=callback;}},{key:\"markAsInBounds\",value:function markAsInBounds(pointerId){if(this.pointersInBounds.indexOf(pointerId)>=0){return;}this.pointersInBounds.push(pointerId);}},{key:\"markAsOutOfBounds\",value:function markAsOutOfBounds(pointerId){var index=this.pointersInBounds.indexOf(pointerId);if(index<0){return;}this.pointersInBounds.splice(index,1);}},{key:\"resetManager\",value:function resetManager(){this.activePointersCounter=0;this.pointersInBounds=[];}}]);}();export{EventManager as default};","map":{"version":3,"names":["EventManager","view","_classCallCheck","_defineProperty","activePointersCounter","_createClass","key","value","onPointerDown","_event","onPointerAdd","onPointerUp","onPointerRemove","onPointerMove","onPointerOut","onPointerEnter","onPointerCancel","onPointerOutOfBounds","setOnPointerDown","callback","setOnPointerAdd","setOnPointerUp","setOnPointerRemove","setOnPointerMove","setOnPointerOut","setOnPointerEnter","setOnPointerCancel","setOnPointerOutOfBounds","markAsInBounds","pointerId","pointersInBounds","indexOf","push","markAsOutOfBounds","index","splice","resetManager","default"],"sources":["/Users/positive-yeon/Downloads/cursor-talk-to-figma-mcp-main/node_modules/react-native-gesture-handler/lib/module/web/tools/EventManager.ts"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-empty-function */\nimport { AdaptedEvent, EventTypes, TouchEventType } from '../interfaces';\n\nexport default abstract class EventManager {\n  protected readonly view: HTMLElement;\n  protected pointersInBounds: number[] = [];\n  protected activePointersCounter: number;\n\n  constructor(view: HTMLElement) {\n    this.view = view;\n    this.activePointersCounter = 0;\n  }\n\n  public abstract setListeners(): void;\n  protected abstract mapEvent(\n    event: Event,\n    eventType: EventTypes,\n    index?: number,\n    touchEventType?: TouchEventType\n  ): AdaptedEvent;\n\n  protected onPointerDown(_event: AdaptedEvent): void {}\n  protected onPointerAdd(_event: AdaptedEvent): void {}\n  protected onPointerUp(_event: AdaptedEvent): void {}\n  protected onPointerRemove(_event: AdaptedEvent): void {}\n  protected onPointerMove(_event: AdaptedEvent): void {}\n  protected onPointerOut(_event: AdaptedEvent): void {}\n  protected onPointerEnter(_event: AdaptedEvent): void {}\n  protected onPointerCancel(_event: AdaptedEvent): void {\n    // When pointer cancel is triggered and there are more pointers on the view, only one pointer is cancelled\n    // Because we want all pointers to be cancelled by that event, we are doing it manually by reseting handler and changing activePointersCounter to 0\n    // Events that correspond to removing the pointer (pointerup, touchend) have condition, that they don't perform any action when activePointersCounter\n    // is equal to 0. This prevents counter from going to negative values, when pointers are removed from view after one of them has been cancelled\n  }\n  protected onPointerOutOfBounds(_event: AdaptedEvent): void {}\n\n  public setOnPointerDown(callback: (event: AdaptedEvent) => void): void {\n    this.onPointerDown = callback;\n  }\n  public setOnPointerAdd(callback: (event: AdaptedEvent) => void): void {\n    this.onPointerAdd = callback;\n  }\n  public setOnPointerUp(callback: (event: AdaptedEvent) => void): void {\n    this.onPointerUp = callback;\n  }\n  public setOnPointerRemove(callback: (event: AdaptedEvent) => void): void {\n    this.onPointerRemove = callback;\n  }\n  public setOnPointerMove(callback: (event: AdaptedEvent) => void): void {\n    this.onPointerMove = callback;\n  }\n  public setOnPointerOut(callback: (event: AdaptedEvent) => void): void {\n    this.onPointerOut = callback;\n  }\n  public setOnPointerEnter(callback: (event: AdaptedEvent) => void): void {\n    this.onPointerEnter = callback;\n  }\n  public setOnPointerCancel(callback: (event: AdaptedEvent) => void): void {\n    this.onPointerCancel = callback;\n  }\n  public setOnPointerOutOfBounds(\n    callback: (event: AdaptedEvent) => void\n  ): void {\n    this.onPointerOutOfBounds = callback;\n  }\n\n  protected markAsInBounds(pointerId: number): void {\n    if (this.pointersInBounds.indexOf(pointerId) >= 0) {\n      return;\n    }\n\n    this.pointersInBounds.push(pointerId);\n  }\n\n  protected markAsOutOfBounds(pointerId: number): void {\n    const index: number = this.pointersInBounds.indexOf(pointerId);\n\n    if (index < 0) {\n      return;\n    }\n\n    this.pointersInBounds.splice(index, 1);\n  }\n\n  public resetManager(): void {\n    // Reseting activePointersCounter is necessary to make gestures such as pinch work properly\n    // There are gestures that end when there is still one active pointer (like pinch/rotation)\n    // When these gestures end, they are reset, but they still receive events from pointer that is active\n    // This causes trouble, since only onPointerDown registers gesture in orchestrator, and while gestures receive\n    // Events from active pointer after they finished, next pointerdown event will be registered as additional pointer, not the first one\n    // This casues trouble like gestures getting stuck in END state, even though they should have gone to UNDETERMINED\n\n    this.activePointersCounter = 0;\n    this.pointersInBounds = [];\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}