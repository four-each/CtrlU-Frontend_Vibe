{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}export var formatTime=function formatTime(minutes){var hours=Math.floor(minutes/60);var mins=minutes%60;var secs=0;return`${hours.toString().padStart(2,'0')}:${mins.toString().padStart(2,'0')}:${secs.toString().padStart(2,'0')}`;};export var formatElapsedTime=function formatElapsedTime(startTime,endTime){var end=endTime||new Date();var diffMs=end.getTime()-startTime.getTime();var diffMinutes=Math.floor(diffMs/(1000*60));return formatTime(diffMinutes);};export var isTimeExceeded=function isTimeExceeded(task){var now=new Date();var elapsedMs=now.getTime()-task.startTime.getTime();var elapsedMinutes=Math.floor(elapsedMs/(1000*60));return elapsedMinutes>task.targetTime;};export var getTimeColor=function getTimeColor(task){if(isTimeExceeded(task)){return'#FF4444';}return'#333333';};export var getStoryItems=function getStoryItems(myTasks,friendTasks){var now=new Date();var twentyFourHoursAgo=new Date(now.getTime()-24*60*60*1000);var items=[];var myOngoingTasks=myTasks.filter(function(task){return!task.isCompleted&&!task.isAbandoned;});var myCompletedTasks=myTasks.filter(function(task){return task.isCompleted&&task.updatedAt>=twentyFourHoursAgo;});[].concat(_toConsumableArray(myOngoingTasks),_toConsumableArray(myCompletedTasks)).forEach(function(task){items.push({id:`my-${task.id}`,task:_objectSpread(_objectSpread({},task),{},{user:{id:task.userId,username:'',nickname:'나'},isViewed:false}),isMyTask:true,timestamp:task.updatedAt});});var unviewedTasks=friendTasks.filter(function(task){return!task.isViewed&&task.updatedAt>=twentyFourHoursAgo;});var viewedTasks=friendTasks.filter(function(task){return task.isViewed&&task.updatedAt>=twentyFourHoursAgo;});[].concat(_toConsumableArray(unviewedTasks),_toConsumableArray(viewedTasks)).forEach(function(task){items.push({id:`friend-${task.id}`,task:task,isMyTask:false,timestamp:task.updatedAt});});return items.sort(function(a,b){return b.timestamp.getTime()-a.timestamp.getTime();});};export var getStoryStatusColor=function getStoryStatusColor(item){if(item.isMyTask){return'#71d596';}if(!item.task.isViewed){return'#71d596';}return'#bababa';};","map":{"version":3,"names":["formatTime","minutes","hours","Math","floor","mins","secs","toString","padStart","formatElapsedTime","startTime","endTime","end","Date","diffMs","getTime","diffMinutes","isTimeExceeded","task","now","elapsedMs","elapsedMinutes","targetTime","getTimeColor","getStoryItems","myTasks","friendTasks","twentyFourHoursAgo","items","myOngoingTasks","filter","isCompleted","isAbandoned","myCompletedTasks","updatedAt","concat","_toConsumableArray","forEach","push","id","_objectSpread","user","userId","username","nickname","isViewed","isMyTask","timestamp","unviewedTasks","viewedTasks","sort","a","b","getStoryStatusColor","item"],"sources":["/Users/positive-yeon/Downloads/cursor-talk-to-figma-mcp-main/src/utils/helpers.ts"],"sourcesContent":["import {Task, TaskWithUser, StoryItem} from '../types';\n\nexport const formatTime = (minutes: number): string => {\n  const hours = Math.floor(minutes / 60);\n  const mins = minutes % 60;\n  const secs = 0; // 초는 항상 0으로 표시 (분 단위로 계산하므로)\n  \n  return `${hours.toString().padStart(2, '0')}:${mins.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;\n};\n\nexport const formatElapsedTime = (startTime: Date, endTime?: Date): string => {\n  const end = endTime || new Date();\n  const diffMs = end.getTime() - startTime.getTime();\n  const diffMinutes = Math.floor(diffMs / (1000 * 60));\n  \n  return formatTime(diffMinutes);\n};\n\nexport const isTimeExceeded = (task: Task): boolean => {\n  const now = new Date();\n  const elapsedMs = now.getTime() - task.startTime.getTime();\n  const elapsedMinutes = Math.floor(elapsedMs / (1000 * 60));\n  \n  return elapsedMinutes > task.targetTime;\n};\n\nexport const getTimeColor = (task: Task): string => {\n  if (isTimeExceeded(task)) {\n    return '#FF4444'; // 빨간색\n  }\n  return '#333333'; // 검은색\n};\n\nexport const getStoryItems = (myTasks: Task[], friendTasks: TaskWithUser[]): StoryItem[] => {\n  const now = new Date();\n  const twentyFourHoursAgo = new Date(now.getTime() - 24 * 60 * 60 * 1000);\n  \n  const items: StoryItem[] = [];\n  \n  // 내 할 일들 (진행중인 것부터)\n  const myOngoingTasks = myTasks.filter(task => !task.isCompleted && !task.isAbandoned);\n  const myCompletedTasks = myTasks.filter(task => task.isCompleted && task.updatedAt >= twentyFourHoursAgo);\n  \n  [...myOngoingTasks, ...myCompletedTasks].forEach(task => {\n    items.push({\n      id: `my-${task.id}`,\n      task: {...task, user: {id: task.userId, username: '', nickname: '나'}, isViewed: false},\n      isMyTask: true,\n      timestamp: task.updatedAt,\n    });\n  });\n  \n  // 친구 할 일들 (안 본 것부터)\n  const unviewedTasks = friendTasks.filter(task => !task.isViewed && task.updatedAt >= twentyFourHoursAgo);\n  const viewedTasks = friendTasks.filter(task => task.isViewed && task.updatedAt >= twentyFourHoursAgo);\n  \n  [...unviewedTasks, ...viewedTasks].forEach(task => {\n    items.push({\n      id: `friend-${task.id}`,\n      task,\n      isMyTask: false,\n      timestamp: task.updatedAt,\n    });\n  });\n  \n  // 최근에 올린 순으로 정렬\n  return items.sort((a, b) => b.timestamp.getTime() - a.timestamp.getTime());\n};\n\nexport const getStoryStatusColor = (item: StoryItem): string => {\n  if (item.isMyTask) {\n    return '#71d596'; // 초록색 (내 할 일)\n  }\n  \n  if (!item.task.isViewed) {\n    return '#71d596'; // 초록색 (안 본 친구 할 일)\n  }\n  \n  return '#bababa'; // 회색 (본 친구 할 일)\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}