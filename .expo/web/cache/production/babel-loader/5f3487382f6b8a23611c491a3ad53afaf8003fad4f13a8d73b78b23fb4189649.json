{"ast":null,"code":"import{useEvent,useHandler}from\"./Hooks\";var _worklet_16221043853259_init_data={code:\"function anonymous(event){const{scrollHandlers,context}=this._closure;const{onScroll:onScroll,onBeginDrag:onBeginDrag,onEndDrag:onEndDrag,onMomentumBegin:onMomentumBegin,onMomentumEnd:onMomentumEnd}=scrollHandlers;if(onScroll&&event.eventName.endsWith('onScroll')){onScroll(event,context);}else if(onBeginDrag&&event.eventName.endsWith('onScrollBeginDrag')){onBeginDrag(event,context);}else if(onEndDrag&&event.eventName.endsWith('onScrollEndDrag')){onEndDrag(event,context);}else if(onMomentumBegin&&event.eventName.endsWith('onMomentumScrollBegin')){onMomentumBegin(event,context);}else if(onMomentumEnd&&event.eventName.endsWith('onMomentumScrollEnd')){onMomentumEnd(event,context);}}\",location:\"/Users/positive-yeon/Downloads/cursor-talk-to-figma-mcp-main/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useAnimatedScrollHandler.js\"};export function useAnimatedScrollHandler(handlers,dependencies){var scrollHandlers=typeof handlers==='function'?{onScroll:handlers}:handlers;var _useHandler=useHandler(scrollHandlers,dependencies),context=_useHandler.context,doDependenciesDiffer=_useHandler.doDependenciesDiffer;var subscribeForEvents=['onScroll'];if(scrollHandlers.onBeginDrag!==undefined){subscribeForEvents.push('onScrollBeginDrag');}if(scrollHandlers.onEndDrag!==undefined){subscribeForEvents.push('onScrollEndDrag');}if(scrollHandlers.onMomentumBegin!==undefined){subscribeForEvents.push('onMomentumScrollBegin');}if(scrollHandlers.onMomentumEnd!==undefined){subscribeForEvents.push('onMomentumScrollEnd');}return useEvent(function(){var _f=function _f(event){var onScroll=scrollHandlers.onScroll,onBeginDrag=scrollHandlers.onBeginDrag,onEndDrag=scrollHandlers.onEndDrag,onMomentumBegin=scrollHandlers.onMomentumBegin,onMomentumEnd=scrollHandlers.onMomentumEnd;if(onScroll&&event.eventName.endsWith('onScroll')){onScroll(event,context);}else if(onBeginDrag&&event.eventName.endsWith('onScrollBeginDrag')){onBeginDrag(event,context);}else if(onEndDrag&&event.eventName.endsWith('onScrollEndDrag')){onEndDrag(event,context);}else if(onMomentumBegin&&event.eventName.endsWith('onMomentumScrollBegin')){onMomentumBegin(event,context);}else if(onMomentumEnd&&event.eventName.endsWith('onMomentumScrollEnd')){onMomentumEnd(event,context);}};_f._closure={scrollHandlers:scrollHandlers,context:context};_f.__initData=_worklet_16221043853259_init_data;_f.__workletHash=16221043853259;return _f;}(),subscribeForEvents,doDependenciesDiffer);}","map":{"version":3,"names":["useEvent","useHandler","_worklet_16221043853259_init_data","code","location","useAnimatedScrollHandler","handlers","dependencies","scrollHandlers","onScroll","_useHandler","context","doDependenciesDiffer","subscribeForEvents","onBeginDrag","undefined","push","onEndDrag","onMomentumBegin","onMomentumEnd","_f","event","eventName","endsWith","_closure","__initData","__workletHash"],"sources":["/Users/positive-yeon/Downloads/cursor-talk-to-figma-mcp-main/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useAnimatedScrollHandler.ts"],"sourcesContent":["import { RefObject } from 'react';\nimport { NativeScrollEvent } from 'react-native';\nimport { Context, NativeEvent, WorkletFunction } from '../commonTypes';\nimport WorkletEventHandler from '../WorkletEventHandler';\nimport { DependencyList } from './commonTypes';\nimport { useEvent, useHandler } from './Hooks';\n\nexport interface ScrollHandler<TContext extends Context>\n  extends WorkletFunction {\n  (event: NativeScrollEvent, context?: TContext): void;\n}\n\nexport interface ScrollEvent\n  extends NativeScrollEvent,\n    NativeEvent<ScrollEvent> {\n  eventName: string;\n}\nexport interface ScrollHandlers<TContext extends Context> {\n  [key: string]: ScrollHandler<TContext> | undefined;\n  onScroll?: ScrollHandler<TContext>;\n  onBeginDrag?: ScrollHandler<TContext>;\n  onEndDrag?: ScrollHandler<TContext>;\n  onMomentumBegin?: ScrollHandler<TContext>;\n  onMomentumEnd?: ScrollHandler<TContext>;\n}\n\nexport function useAnimatedScrollHandler<TContext extends Context>(\n  handlers: ScrollHandlers<TContext> | ScrollHandler<TContext>,\n  dependencies?: DependencyList\n): RefObject<WorkletEventHandler<ScrollEvent>> {\n  // case when handlers is a function\n  const scrollHandlers: ScrollHandlers<TContext> =\n    typeof handlers === 'function' ? { onScroll: handlers } : handlers;\n  const { context, doDependenciesDiffer } = useHandler<ScrollEvent, TContext>(\n    scrollHandlers,\n    dependencies\n  );\n\n  // build event subscription array\n  const subscribeForEvents = ['onScroll'];\n  if (scrollHandlers.onBeginDrag !== undefined) {\n    subscribeForEvents.push('onScrollBeginDrag');\n  }\n  if (scrollHandlers.onEndDrag !== undefined) {\n    subscribeForEvents.push('onScrollEndDrag');\n  }\n  if (scrollHandlers.onMomentumBegin !== undefined) {\n    subscribeForEvents.push('onMomentumScrollBegin');\n  }\n  if (scrollHandlers.onMomentumEnd !== undefined) {\n    subscribeForEvents.push('onMomentumScrollEnd');\n  }\n\n  return useEvent<ScrollEvent>(\n    (event: ScrollEvent) => {\n      'worklet';\n      const {\n        onScroll,\n        onBeginDrag,\n        onEndDrag,\n        onMomentumBegin,\n        onMomentumEnd,\n      } = scrollHandlers;\n      if (onScroll && event.eventName.endsWith('onScroll')) {\n        onScroll(event, context);\n      } else if (onBeginDrag && event.eventName.endsWith('onScrollBeginDrag')) {\n        onBeginDrag(event, context);\n      } else if (onEndDrag && event.eventName.endsWith('onScrollEndDrag')) {\n        onEndDrag(event, context);\n      } else if (\n        onMomentumBegin &&\n        event.eventName.endsWith('onMomentumScrollBegin')\n      ) {\n        onMomentumBegin(event, context);\n      } else if (\n        onMomentumEnd &&\n        event.eventName.endsWith('onMomentumScrollEnd')\n      ) {\n        onMomentumEnd(event, context);\n      }\n    },\n    subscribeForEvents,\n    doDependenciesDiffer\n  );\n}\n"],"mappings":"AAKA,OAASA,QAAQ,CAAEC,UAAU,eAAiB,IAAAC,iCAAA,EAAAC,IAAA,mrBAAAC,QAAA,8JAqB9C,MAAO,SAAS,CAAAC,wBAAwBA,CACtCC,QAA4D,CAC5DC,YAA6B,CACgB,CAE7C,GAAM,CAAAC,cAAwC,CAC5C,MAAO,CAAAF,QAAQ,GAAK,UAAU,CAAG,CAAEG,QAAQ,CAAEH,QAAS,CAAC,CAAGA,QAAQ,CACpE,IAAAI,WAAA,CAA0CT,UAAU,CAClDO,cAAc,CACdD,YAAY,CACb,CAHOI,OAAO,CAAAD,WAAA,CAAPC,OAAO,CAAEC,oBAAA,CAAAF,WAAA,CAAAE,oBAAA,CAMjB,GAAM,CAAAC,kBAAkB,CAAG,CAAC,UAAU,CAAC,CACvC,GAAIL,cAAc,CAACM,WAAW,GAAKC,SAAS,CAAE,CAC5CF,kBAAkB,CAACG,IAAI,CAAC,mBAAmB,CAAC,CAC9C,CACA,GAAIR,cAAc,CAACS,SAAS,GAAKF,SAAS,CAAE,CAC1CF,kBAAkB,CAACG,IAAI,CAAC,iBAAiB,CAAC,CAC5C,CACA,GAAIR,cAAc,CAACU,eAAe,GAAKH,SAAS,CAAE,CAChDF,kBAAkB,CAACG,IAAI,CAAC,uBAAuB,CAAC,CAClD,CACA,GAAIR,cAAc,CAACW,aAAa,GAAKJ,SAAS,CAAE,CAC9CF,kBAAkB,CAACG,IAAI,CAAC,qBAAqB,CAAC,CAChD,CAEA,MAAO,CAAAhB,QAAQ,gBAAAoB,EAAA,UAAAA,GACZC,KAAkB,CAAK,CAEtB,GACE,CAAAZ,QAAQ,CAKND,cAAc,CALhBC,QAAQ,CACRK,WAAW,CAITN,cAAc,CAJhBM,WAAW,CACXG,SAAS,CAGPT,cAAc,CAHhBS,SAAS,CACTC,eAAe,CAEbV,cAAc,CAFhBU,eAAe,CACfC,aAAA,CACEX,cAAc,CADhBW,aAAA,CAEF,GAAIV,QAAQ,EAAIY,KAAK,CAACC,SAAS,CAACC,QAAQ,CAAC,UAAU,CAAC,CAAE,CACpDd,QAAQ,CAACY,KAAK,CAAEV,OAAO,CAAC,CAC1B,CAAC,IAAM,IAAIG,WAAW,EAAIO,KAAK,CAACC,SAAS,CAACC,QAAQ,CAAC,mBAAmB,CAAC,CAAE,CACvET,WAAW,CAACO,KAAK,CAAEV,OAAO,CAAC,CAC7B,CAAC,IAAM,IAAIM,SAAS,EAAII,KAAK,CAACC,SAAS,CAACC,QAAQ,CAAC,iBAAiB,CAAC,CAAE,CACnEN,SAAS,CAACI,KAAK,CAAEV,OAAO,CAAC,CAC3B,CAAC,IAAM,IACLO,eAAe,EACfG,KAAK,CAACC,SAAS,CAACC,QAAQ,CAAC,uBAAuB,CAAC,CACjD,CACAL,eAAe,CAACG,KAAK,CAAEV,OAAO,CAAC,CACjC,CAAC,IAAM,IACLQ,aAAa,EACbE,KAAK,CAACC,SAAS,CAACC,QAAQ,CAAC,qBAAqB,CAAC,CAC/C,CACAJ,aAAa,CAACE,KAAK,CAAEV,OAAO,CAAC,CAC/B,CACF,CAAC,CAAAS,EAAA,CAAAI,QAAA,EAAAhB,cAAA,CA/CKA,cAAO,CAAAG,OAAA,CAWMA,OAAK,EAAAS,EAAA,CAAAK,UAAA,CAAAvB,iCAAA,CAAAkB,EAAA,CAAAM,aAAA,uBAAAN,EAAA,KAqCxBP,kBAAkB,CAClBD,oBAAoB,CACrB,CACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}