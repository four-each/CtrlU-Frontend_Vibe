{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"scrollViewOffset\"];function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import React,{forwardRef}from'react';import ScrollView from\"react-native-web/dist/exports/ScrollView\";import createAnimatedComponent from\"../../createAnimatedComponent\";import{useScrollViewOffset,useAnimatedRef}from\"../hook\";var AnimatedScrollViewComponent=createAnimatedComponent(ScrollView);var AnimatedScrollView=forwardRef(function(props,ref){var scrollViewOffset=props.scrollViewOffset,restProps=_objectWithoutProperties(props,_excluded);var aref=ref===null?useAnimatedRef():ref;if(scrollViewOffset){useScrollViewOffset(aref,scrollViewOffset);}return React.createElement(AnimatedScrollViewComponent,_extends({ref:aref},restProps));});export default AnimatedScrollView;","map":{"version":3,"names":["React","forwardRef","ScrollView","createAnimatedComponent","useScrollViewOffset","useAnimatedRef","AnimatedScrollViewComponent","AnimatedScrollView","props","ref","scrollViewOffset","restProps","_objectWithoutProperties","_excluded","aref","createElement","_extends"],"sources":["/Users/positive-yeon/Downloads/cursor-talk-to-figma-mcp-main/node_modules/react-native-reanimated/lib/module/reanimated2/component/ScrollView.tsx"],"sourcesContent":["import React, { ForwardedRef, forwardRef, RefObject } from 'react';\nimport { ScrollView, ScrollViewProps } from 'react-native';\nimport type Animated from 'react-native-reanimated';\nimport createAnimatedComponent from '../../createAnimatedComponent';\nimport { SharedValue } from '../commonTypes';\nimport { useScrollViewOffset, useAnimatedRef } from '../hook';\n\nconst AnimatedScrollViewComponent = createAnimatedComponent(\n  ScrollView as any\n) as any;\n\nexport interface AnimatedScrollViewProps extends ScrollViewProps {\n  scrollViewOffset?: SharedValue<number>;\n}\n\ntype AnimatedScrollViewFC = React.FC<AnimatedScrollViewProps>;\n\nconst AnimatedScrollView: AnimatedScrollViewFC = forwardRef(\n  (props: AnimatedScrollViewProps, ref: ForwardedRef<Animated.ScrollView>) => {\n    const { scrollViewOffset, ...restProps } = props;\n    const aref = ref === null ? useAnimatedRef<ScrollView>() : ref;\n\n    if (scrollViewOffset) {\n      useScrollViewOffset(\n        aref as RefObject<Animated.ScrollView>,\n        scrollViewOffset\n      );\n    }\n    return <AnimatedScrollViewComponent ref={aref} {...restProps} />;\n  }\n);\nexport default AnimatedScrollView;\n"],"mappings":"maAAA,MAAO,CAAAA,KAAK,EAAkBC,UAAU,KAAmB,OAAO,QAAAC,UAAA,gDAGlE,MAAO,CAAAC,uBAAuB,qCAE9B,OAASC,mBAAmB,CAAEC,cAAc,eAE5C,GAAM,CAAAC,2BAA2B,CAAGH,uBAAuB,CACzDD,UAAU,CACJ,CAQR,GAAM,CAAAK,kBAAwC,CAAGN,UAAU,CACzD,SAACO,KAA8B,CAAEC,GAAsC,CAAK,CAC1E,GAAQ,CAAAC,gBAAgB,CAAmBF,KAAK,CAAxCE,gBAAgB,CAAKC,SAAA,CAAAC,wBAAA,CAAcJ,KAAK,CAAAK,SAAA,EAChD,GAAM,CAAAC,IAAI,CAAGL,GAAG,GAAK,IAAI,CAAGJ,cAAc,EAAc,CAAGI,GAAG,CAE9D,GAAIC,gBAAgB,CAAE,CACpBN,mBAAmB,CACjBU,IAAI,CACJJ,gBAAgB,CACjB,CACH,CACA,MAAO,CAAAV,KAAA,CAAAe,aAAA,CAACT,2BAA2B,CAAAU,QAAA,EAACP,GAAG,CAAEK,IAAK,EAAKH,SAAS,EAAI,CAClE,CAAC,CACF,CACD,cAAe,CAAAJ,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}