{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _get from\"@babel/runtime/helpers/get\";import _inherits from\"@babel/runtime/helpers/inherits\";var _excluded=[\"numberOfPointers\",\"direction\"];function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);r&&(o=o.filter(function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable;})),t.push.apply(t,o);}return t;}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach(function(r){_defineProperty(e,r,t[r]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach(function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r));});}return e;}function _callSuper(t,o,e){return o=_getPrototypeOf(o),_possibleConstructorReturn(t,_isNativeReflectConstruct()?Reflect.construct(o,e||[],_getPrototypeOf(t).constructor):o.apply(t,e));}function _isNativeReflectConstruct(){try{var t=!Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));}catch(t){}return(_isNativeReflectConstruct=function _isNativeReflectConstruct(){return!!t;})();}function _superPropGet(t,o,e,r){var p=_get(_getPrototypeOf(1&r?t.prototype:t),o,e);return 2&r&&\"function\"==typeof p?function(t){return p.apply(e,t);}:p;}import Hammer from'@egjs/hammerjs';import{Direction}from\"./constants\";import{GesturePropError}from\"./Errors\";import DraggingGestureHandler from\"./DraggingGestureHandler\";import{isnan}from\"./utils\";var FlingGestureHandler=function(_DraggingGestureHandl){function FlingGestureHandler(){_classCallCheck(this,FlingGestureHandler);return _callSuper(this,FlingGestureHandler,arguments);}_inherits(FlingGestureHandler,_DraggingGestureHandl);return _createClass(FlingGestureHandler,[{key:\"name\",get:function get(){return'swipe';}},{key:\"NativeGestureClass\",get:function get(){return Hammer.Swipe;}},{key:\"onGestureActivated\",value:function onGestureActivated(event){this.sendEvent(_objectSpread(_objectSpread({},event),{},{eventType:Hammer.INPUT_MOVE,isFinal:false,isFirst:true}));this.isGestureRunning=false;this.hasGestureFailed=false;this.sendEvent(_objectSpread(_objectSpread({},event),{},{eventType:Hammer.INPUT_END,isFinal:true}));}},{key:\"onRawEvent\",value:function onRawEvent(ev){var _this=this;_superPropGet(FlingGestureHandler,\"onRawEvent\",this,3)([ev]);if(this.hasGestureFailed){return;}if(ev.isFinal){setTimeout(function(){if(_this.isGestureRunning){_this.cancelEvent(ev);}});}else if(!this.hasGestureFailed&&!this.isGestureRunning){var gesture=this.hammer.get(this.name);if(gesture.options.enable(gesture,ev)){this.onStart(ev);this.sendEvent(ev);}}}},{key:\"getHammerConfig\",value:function getHammerConfig(){return{pointers:this.config.numberOfPointers,direction:this.getDirection()};}},{key:\"getTargetDirections\",value:function getTargetDirections(direction){var directions=[];if(direction&Direction.RIGHT){directions.push(Hammer.DIRECTION_RIGHT);}if(direction&Direction.LEFT){directions.push(Hammer.DIRECTION_LEFT);}if(direction&Direction.UP){directions.push(Hammer.DIRECTION_UP);}if(direction&Direction.DOWN){directions.push(Hammer.DIRECTION_DOWN);}return directions;}},{key:\"getDirection\",value:function getDirection(){var _this$getConfig=this.getConfig(),direction=_this$getConfig.direction;var directions=[];if(direction&Direction.RIGHT){directions.push(Hammer.DIRECTION_HORIZONTAL);}if(direction&Direction.LEFT){directions.push(Hammer.DIRECTION_HORIZONTAL);}if(direction&Direction.UP){directions.push(Hammer.DIRECTION_VERTICAL);}if(direction&Direction.DOWN){directions.push(Hammer.DIRECTION_VERTICAL);}directions=_toConsumableArray(new Set(directions));if(directions.length===0)return Hammer.DIRECTION_NONE;if(directions.length===1)return directions[0];return Hammer.DIRECTION_ALL;}},{key:\"isGestureEnabledForEvent\",value:function isGestureEnabledForEvent(_ref,_recognizer,_ref2){var numberOfPointers=_ref.numberOfPointers;var pointerLength=_ref2.maxPointers;var validPointerCount=pointerLength===numberOfPointers;if(!validPointerCount&&this.isGestureRunning){return{failed:true};}return{success:validPointerCount};}},{key:\"updateGestureConfig\",value:function updateGestureConfig(_ref3){var _ref3$numberOfPointer=_ref3.numberOfPointers,numberOfPointers=_ref3$numberOfPointer===void 0?1:_ref3$numberOfPointer,direction=_ref3.direction,props=_objectWithoutProperties(_ref3,_excluded);if(isnan(direction)||typeof direction!=='number'){throw new GesturePropError('direction',direction,'number');}return _superPropGet(FlingGestureHandler,\"updateGestureConfig\",this,3)([_objectSpread({numberOfPointers:numberOfPointers,direction:direction},props)]);}}]);}(DraggingGestureHandler);export default FlingGestureHandler;","map":{"version":3,"names":["Hammer","Direction","GesturePropError","DraggingGestureHandler","isnan","FlingGestureHandler","_DraggingGestureHandl","_classCallCheck","_callSuper","arguments","_inherits","_createClass","key","get","Swipe","value","onGestureActivated","event","sendEvent","_objectSpread","eventType","INPUT_MOVE","isFinal","isFirst","isGestureRunning","hasGestureFailed","INPUT_END","onRawEvent","ev","_this","_superPropGet","setTimeout","cancelEvent","gesture","hammer","name","options","enable","onStart","getHammerConfig","pointers","config","numberOfPointers","direction","getDirection","getTargetDirections","directions","RIGHT","push","DIRECTION_RIGHT","LEFT","DIRECTION_LEFT","UP","DIRECTION_UP","DOWN","DIRECTION_DOWN","_this$getConfig","getConfig","DIRECTION_HORIZONTAL","DIRECTION_VERTICAL","_toConsumableArray","Set","length","DIRECTION_NONE","DIRECTION_ALL","isGestureEnabledForEvent","_ref","_recognizer","_ref2","pointerLength","maxPointers","validPointerCount","failed","success","updateGestureConfig","_ref3","_ref3$numberOfPointer","props","_objectWithoutProperties","_excluded"],"sources":["/Users/positive-yeon/Downloads/cursor-talk-to-figma-mcp-main/node_modules/react-native-gesture-handler/lib/module/web_hammer/FlingGestureHandler.ts"],"sourcesContent":["/* eslint-disable eslint-comments/no-unlimited-disable */\n/* eslint-disable */\nimport Hammer from '@egjs/hammerjs';\n\nimport { Direction } from './constants';\nimport { GesturePropError } from './Errors';\nimport DraggingGestureHandler from './DraggingGestureHandler';\nimport { isnan } from './utils';\nimport { HammerInputExt } from './GestureHandler';\n\nclass FlingGestureHandler extends DraggingGestureHandler {\n  get name() {\n    return 'swipe';\n  }\n\n  get NativeGestureClass() {\n    return Hammer.Swipe;\n  }\n\n  onGestureActivated(event: HammerInputExt) {\n    this.sendEvent({\n      ...event,\n      eventType: Hammer.INPUT_MOVE,\n      isFinal: false,\n      isFirst: true,\n    });\n    this.isGestureRunning = false;\n    this.hasGestureFailed = false;\n    this.sendEvent({\n      ...event,\n      eventType: Hammer.INPUT_END,\n      isFinal: true,\n    });\n  }\n\n  onRawEvent(ev: HammerInputExt) {\n    super.onRawEvent(ev);\n    if (this.hasGestureFailed) {\n      return;\n    }\n    // Hammer doesn't send a `cancel` event for taps.\n    // Manually fail the event.\n    if (ev.isFinal) {\n      setTimeout(() => {\n        if (this.isGestureRunning) {\n          this.cancelEvent(ev);\n        }\n      });\n    } else if (!this.hasGestureFailed && !this.isGestureRunning) {\n      // Tap Gesture start event\n      const gesture = this.hammer!.get(this.name);\n      // @ts-ignore FIXME(TS)\n      if (gesture.options.enable(gesture, ev)) {\n        this.onStart(ev);\n        this.sendEvent(ev);\n      }\n    }\n  }\n\n  getHammerConfig() {\n    return {\n      // @ts-ignore FIXME(TS)\n      pointers: this.config.numberOfPointers,\n      direction: this.getDirection(),\n    };\n  }\n\n  getTargetDirections(direction: number) {\n    const directions = [];\n    if (direction & Direction.RIGHT) {\n      directions.push(Hammer.DIRECTION_RIGHT);\n    }\n    if (direction & Direction.LEFT) {\n      directions.push(Hammer.DIRECTION_LEFT);\n    }\n    if (direction & Direction.UP) {\n      directions.push(Hammer.DIRECTION_UP);\n    }\n    if (direction & Direction.DOWN) {\n      directions.push(Hammer.DIRECTION_DOWN);\n    }\n    // const hammerDirection = directions.reduce((a, b) => a | b, 0);\n    return directions;\n  }\n\n  getDirection() {\n    // @ts-ignore FIXME(TS)\n    const { direction } = this.getConfig();\n\n    let directions = [];\n    if (direction & Direction.RIGHT) {\n      directions.push(Hammer.DIRECTION_HORIZONTAL);\n    }\n    if (direction & Direction.LEFT) {\n      directions.push(Hammer.DIRECTION_HORIZONTAL);\n    }\n    if (direction & Direction.UP) {\n      directions.push(Hammer.DIRECTION_VERTICAL);\n    }\n    if (direction & Direction.DOWN) {\n      directions.push(Hammer.DIRECTION_VERTICAL);\n    }\n    directions = [...new Set(directions)];\n\n    if (directions.length === 0) return Hammer.DIRECTION_NONE;\n    if (directions.length === 1) return directions[0];\n    return Hammer.DIRECTION_ALL;\n  }\n\n  isGestureEnabledForEvent(\n    { numberOfPointers }: any,\n    _recognizer: any,\n    { maxPointers: pointerLength }: any\n  ) {\n    const validPointerCount = pointerLength === numberOfPointers;\n    if (!validPointerCount && this.isGestureRunning) {\n      return { failed: true };\n    }\n    return { success: validPointerCount };\n  }\n\n  updateGestureConfig({ numberOfPointers = 1, direction, ...props }: any) {\n    if (isnan(direction) || typeof direction !== 'number') {\n      throw new GesturePropError('direction', direction, 'number');\n    }\n    return super.updateGestureConfig({\n      numberOfPointers,\n      direction,\n      ...props,\n    });\n  }\n}\n\nexport default FlingGestureHandler;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}