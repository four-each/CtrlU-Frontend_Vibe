{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import VelocityTracker from\"./VelocityTracker\";var MAX_POINTERS=20;var PointerTracker=function(){function PointerTracker(){_classCallCheck(this,PointerTracker);_defineProperty(this,\"velocityTracker\",new VelocityTracker());_defineProperty(this,\"trackedPointers\",new Map());_defineProperty(this,\"touchEventsIds\",new Map());_defineProperty(this,\"lastMovedPointerId\",void 0);_defineProperty(this,\"cachedAverages\",{x:0,y:0});this.lastMovedPointerId=NaN;for(var i=0;i<MAX_POINTERS;++i){this.touchEventsIds.set(i,NaN);}}return _createClass(PointerTracker,[{key:\"addToTracker\",value:function addToTracker(event){if(this.trackedPointers.has(event.pointerId)){return;}this.lastMovedPointerId=event.pointerId;var newElement={lastX:event.x,lastY:event.y,timeStamp:event.time,velocityX:0,velocityY:0};this.trackedPointers.set(event.pointerId,newElement);this.mapTouchEventId(event.pointerId);this.cachedAverages={x:this.getLastAvgX(),y:this.getLastAvgY()};}},{key:\"removeFromTracker\",value:function removeFromTracker(pointerId){this.trackedPointers.delete(pointerId);this.removeMappedTouchId(pointerId);}},{key:\"track\",value:function track(event){var element=this.trackedPointers.get(event.pointerId);if(!element){return;}this.lastMovedPointerId=event.pointerId;this.velocityTracker.add(event);var _this$velocityTracker=this.velocityTracker.getVelocity(),_this$velocityTracker2=_slicedToArray(_this$velocityTracker,2),velocityX=_this$velocityTracker2[0],velocityY=_this$velocityTracker2[1];element.velocityX=velocityX;element.velocityY=velocityY;element.lastX=event.x;element.lastY=event.y;this.trackedPointers.set(event.pointerId,element);var avgX=this.getLastAvgX();var avgY=this.getLastAvgY();this.cachedAverages={x:avgX,y:avgY};}},{key:\"mapTouchEventId\",value:function mapTouchEventId(id){for(var _ref of this.touchEventsIds){var _ref2=_slicedToArray(_ref,2);var mappedId=_ref2[0];var touchId=_ref2[1];if(isNaN(touchId)){this.touchEventsIds.set(mappedId,id);break;}}}},{key:\"removeMappedTouchId\",value:function removeMappedTouchId(id){var mappedId=this.getMappedTouchEventId(id);if(!isNaN(mappedId)){this.touchEventsIds.set(mappedId,NaN);}}},{key:\"getMappedTouchEventId\",value:function getMappedTouchEventId(touchEventId){for(var _ref3 of this.touchEventsIds.entries()){var _ref4=_slicedToArray(_ref3,2);var key=_ref4[0];var value=_ref4[1];if(value===touchEventId){return key;}}return NaN;}},{key:\"getVelocityX\",value:function getVelocityX(pointerId){var _this$trackedPointers;return(_this$trackedPointers=this.trackedPointers.get(pointerId))===null||_this$trackedPointers===void 0?void 0:_this$trackedPointers.velocityX;}},{key:\"getVelocityY\",value:function getVelocityY(pointerId){var _this$trackedPointers2;return(_this$trackedPointers2=this.trackedPointers.get(pointerId))===null||_this$trackedPointers2===void 0?void 0:_this$trackedPointers2.velocityY;}},{key:\"getLastX\",value:function getLastX(pointerId){if(pointerId!==undefined){var _this$trackedPointers3;return(_this$trackedPointers3=this.trackedPointers.get(pointerId))===null||_this$trackedPointers3===void 0?void 0:_this$trackedPointers3.lastX;}else{var _this$trackedPointers4;return(_this$trackedPointers4=this.trackedPointers.get(this.lastMovedPointerId))===null||_this$trackedPointers4===void 0?void 0:_this$trackedPointers4.lastX;}}},{key:\"getLastY\",value:function getLastY(pointerId){if(pointerId!==undefined){var _this$trackedPointers5;return(_this$trackedPointers5=this.trackedPointers.get(pointerId))===null||_this$trackedPointers5===void 0?void 0:_this$trackedPointers5.lastY;}else{var _this$trackedPointers6;return(_this$trackedPointers6=this.trackedPointers.get(this.lastMovedPointerId))===null||_this$trackedPointers6===void 0?void 0:_this$trackedPointers6.lastY;}}},{key:\"getLastAvgX\",value:function getLastAvgX(){var avgX=this.getSumX()/this.trackedPointers.size;return isNaN(avgX)?this.cachedAverages.x:avgX;}},{key:\"getLastAvgY\",value:function getLastAvgY(){var avgY=this.getSumY()/this.trackedPointers.size;return isNaN(avgY)?this.cachedAverages.y:avgY;}},{key:\"getSumX\",value:function getSumX(ignoredPointer){var sumX=0;this.trackedPointers.forEach(function(value,key){if(key!==ignoredPointer){sumX+=value.lastX;}});return sumX;}},{key:\"getSumY\",value:function getSumY(ignoredPointer){var sumY=0;this.trackedPointers.forEach(function(value,key){if(key!==ignoredPointer){sumY+=value.lastY;}});return sumY;}},{key:\"getTrackedPointersCount\",value:function getTrackedPointersCount(){return this.trackedPointers.size;}},{key:\"getTrackedPointersID\",value:function getTrackedPointersID(){var keys=[];this.trackedPointers.forEach(function(_value,key){keys.push(key);});return keys;}},{key:\"getData\",value:function getData(){return this.trackedPointers;}},{key:\"resetTracker\",value:function resetTracker(){this.velocityTracker.reset();this.trackedPointers.clear();this.lastMovedPointerId=NaN;for(var i=0;i<MAX_POINTERS;++i){this.touchEventsIds.set(i,NaN);}}}],[{key:\"shareCommonPointers\",value:function shareCommonPointers(stPointers,ndPointers){return stPointers.some(function(pointerId){return ndPointers.includes(pointerId);});}}]);}();export{PointerTracker as default};","map":{"version":3,"names":["VelocityTracker","MAX_POINTERS","PointerTracker","_classCallCheck","_defineProperty","Map","x","y","lastMovedPointerId","NaN","i","touchEventsIds","set","_createClass","key","value","addToTracker","event","trackedPointers","has","pointerId","newElement","lastX","lastY","timeStamp","time","velocityX","velocityY","mapTouchEventId","cachedAverages","getLastAvgX","getLastAvgY","removeFromTracker","delete","removeMappedTouchId","track","element","get","velocityTracker","add","_this$velocityTracker","getVelocity","_this$velocityTracker2","_slicedToArray","avgX","avgY","id","_ref","_ref2","mappedId","touchId","isNaN","getMappedTouchEventId","touchEventId","_ref3","entries","_ref4","getVelocityX","_this$trackedPointers","getVelocityY","_this$trackedPointers2","getLastX","undefined","_this$trackedPointers3","_this$trackedPointers4","getLastY","_this$trackedPointers5","_this$trackedPointers6","getSumX","size","getSumY","ignoredPointer","sumX","forEach","sumY","getTrackedPointersCount","getTrackedPointersID","keys","_value","push","getData","resetTracker","reset","clear","shareCommonPointers","stPointers","ndPointers","some","includes","default"],"sources":["/Users/positive-yeon/Downloads/cursor-talk-to-figma-mcp-main/node_modules/react-native-gesture-handler/lib/module/web/tools/PointerTracker.ts"],"sourcesContent":["import { AdaptedEvent } from '../interfaces';\nimport VelocityTracker from './VelocityTracker';\n\nexport interface TrackerElement {\n  lastX: number;\n  lastY: number;\n\n  timeStamp: number;\n\n  velocityX: number;\n  velocityY: number;\n}\n\nconst MAX_POINTERS = 20;\n\nexport default class PointerTracker {\n  private velocityTracker = new VelocityTracker();\n  private trackedPointers: Map<number, TrackerElement> = new Map<\n    number,\n    TrackerElement\n  >();\n\n  private touchEventsIds: Map<number, number> = new Map<number, number>();\n\n  private lastMovedPointerId: number;\n\n  private cachedAverages: { x: number; y: number } = { x: 0, y: 0 };\n\n  public constructor() {\n    this.lastMovedPointerId = NaN;\n\n    for (let i = 0; i < MAX_POINTERS; ++i) {\n      this.touchEventsIds.set(i, NaN);\n    }\n  }\n\n  public addToTracker(event: AdaptedEvent): void {\n    if (this.trackedPointers.has(event.pointerId)) {\n      return;\n    }\n\n    this.lastMovedPointerId = event.pointerId;\n\n    const newElement: TrackerElement = {\n      lastX: event.x,\n      lastY: event.y,\n      timeStamp: event.time,\n      velocityX: 0,\n      velocityY: 0,\n    };\n\n    this.trackedPointers.set(event.pointerId, newElement);\n    this.mapTouchEventId(event.pointerId);\n\n    this.cachedAverages = {\n      x: this.getLastAvgX(),\n      y: this.getLastAvgY(),\n    };\n  }\n\n  public removeFromTracker(pointerId: number): void {\n    this.trackedPointers.delete(pointerId);\n    this.removeMappedTouchId(pointerId);\n  }\n\n  public track(event: AdaptedEvent): void {\n    const element: TrackerElement = this.trackedPointers.get(\n      event.pointerId\n    ) as TrackerElement;\n\n    if (!element) {\n      return;\n    }\n\n    this.lastMovedPointerId = event.pointerId;\n\n    this.velocityTracker.add(event);\n    const [velocityX, velocityY] = this.velocityTracker.getVelocity();\n\n    element.velocityX = velocityX;\n    element.velocityY = velocityY;\n\n    element.lastX = event.x;\n    element.lastY = event.y;\n\n    this.trackedPointers.set(event.pointerId, element);\n\n    const avgX: number = this.getLastAvgX();\n    const avgY: number = this.getLastAvgY();\n\n    this.cachedAverages = {\n      x: avgX,\n      y: avgY,\n    };\n  }\n\n  //Mapping TouchEvents ID\n  private mapTouchEventId(id: number): void {\n    for (const [mappedId, touchId] of this.touchEventsIds) {\n      if (isNaN(touchId)) {\n        this.touchEventsIds.set(mappedId, id);\n        break;\n      }\n    }\n  }\n\n  private removeMappedTouchId(id: number): void {\n    const mappedId: number = this.getMappedTouchEventId(id);\n    if (!isNaN(mappedId)) {\n      this.touchEventsIds.set(mappedId, NaN);\n    }\n  }\n\n  public getMappedTouchEventId(touchEventId: number): number {\n    for (const [key, value] of this.touchEventsIds.entries()) {\n      if (value === touchEventId) {\n        return key;\n      }\n    }\n\n    return NaN;\n  }\n\n  public getVelocityX(pointerId: number): number {\n    return this.trackedPointers.get(pointerId)?.velocityX as number;\n  }\n  public getVelocityY(pointerId: number): number {\n    return this.trackedPointers.get(pointerId)?.velocityY as number;\n  }\n\n  /**\n   * Returns X coordinate of last moved pointer\n   */\n  public getLastX(): number;\n\n  /**\n   *\n   * @param pointerId\n   * Returns X coordinate of given pointer\n   */\n  // eslint-disable-next-line @typescript-eslint/unified-signatures\n  public getLastX(pointerId: number): number;\n\n  public getLastX(pointerId?: number): number {\n    if (pointerId !== undefined) {\n      return this.trackedPointers.get(pointerId)?.lastX as number;\n    } else {\n      return this.trackedPointers.get(this.lastMovedPointerId)?.lastX as number;\n    }\n  }\n\n  /**\n   * Returns Y coordinate of last moved pointer\n   */\n  public getLastY(): number;\n\n  /**\n   *\n   * @param pointerId\n   * Returns Y coordinate of given pointer\n   */\n  // eslint-disable-next-line @typescript-eslint/unified-signatures\n  public getLastY(pointerId: number): number;\n\n  public getLastY(pointerId?: number): number {\n    if (pointerId !== undefined) {\n      return this.trackedPointers.get(pointerId)?.lastY as number;\n    } else {\n      return this.trackedPointers.get(this.lastMovedPointerId)?.lastY as number;\n    }\n  }\n\n  // Some handlers use these methods to send average values in native event.\n  // This may happen when pointers have already been removed from tracker (i.e. pointerup event).\n  // In situation when NaN would be sent as a response, we return cached value.\n  // That prevents handlers from crashing\n  public getLastAvgX(): number {\n    const avgX: number = this.getSumX() / this.trackedPointers.size;\n    return isNaN(avgX) ? this.cachedAverages.x : avgX;\n  }\n  public getLastAvgY(): number {\n    const avgY: number = this.getSumY() / this.trackedPointers.size;\n    return isNaN(avgY) ? this.cachedAverages.y : avgY;\n  }\n  public getSumX(ignoredPointer?: number): number {\n    let sumX = 0;\n\n    this.trackedPointers.forEach((value, key) => {\n      if (key !== ignoredPointer) {\n        sumX += value.lastX;\n      }\n    });\n\n    return sumX;\n  }\n  public getSumY(ignoredPointer?: number): number {\n    let sumY = 0;\n\n    this.trackedPointers.forEach((value, key) => {\n      if (key !== ignoredPointer) {\n        sumY += value.lastY;\n      }\n    });\n\n    return sumY;\n  }\n  public getTrackedPointersCount(): number {\n    return this.trackedPointers.size;\n  }\n  public getTrackedPointersID(): number[] {\n    const keys: number[] = [];\n\n    this.trackedPointers.forEach((_value, key) => {\n      keys.push(key);\n    });\n\n    return keys;\n  }\n\n  public getData(): Map<number, TrackerElement> {\n    return this.trackedPointers;\n  }\n\n  public resetTracker(): void {\n    this.velocityTracker.reset();\n    this.trackedPointers.clear();\n    this.lastMovedPointerId = NaN;\n\n    for (let i = 0; i < MAX_POINTERS; ++i) {\n      this.touchEventsIds.set(i, NaN);\n    }\n  }\n\n  public static shareCommonPointers(\n    stPointers: number[],\n    ndPointers: number[]\n  ): boolean {\n    return stPointers.some((pointerId) => ndPointers.includes(pointerId));\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}