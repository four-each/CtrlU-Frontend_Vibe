{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import{jsVersion}from\"./jsVersion\";export function checkCppVersion(){var cppVersion=global._REANIMATED_VERSION_CPP;if(cppVersion===undefined){throw new Error(`[Reanimated] Couldn't determine the version of the native part of Reanimated. Did you forget to re-build the app after upgrading react-native-reanimated? If you use Expo Go, you must use the exact version which is bundled into Expo SDK.`);}var ok=matchVersion(jsVersion,cppVersion);if(!ok){throw new Error(`[Reanimated] Mismatch between JavaScript part and native part of Reanimated (${jsVersion} vs. ${cppVersion}). Did you forget to re-build the app after upgrading react-native-reanimated? If you use Expo Go, you must downgrade to ${cppVersion} which is bundled into Expo SDK.`);}}export function matchVersion(version1,version2){if(version1.match(/^\\d+\\.\\d+\\.\\d+$/)&&version2.match(/^\\d+\\.\\d+\\.\\d+$/)){var _version1$split=version1.split('.'),_version1$split2=_slicedToArray(_version1$split,2),major1=_version1$split2[0],minor1=_version1$split2[1];var _version2$split=version2.split('.'),_version2$split2=_slicedToArray(_version2$split,2),major2=_version2$split2[0],minor2=_version2$split2[1];return major1===major2&&minor1===minor2;}else{return version1===version2;}}","map":{"version":3,"names":["jsVersion","checkCppVersion","cppVersion","global","_REANIMATED_VERSION_CPP","undefined","Error","ok","matchVersion","version1","version2","match","_version1$split","split","_version1$split2","_slicedToArray","major1","minor1","_version2$split","_version2$split2","major2","minor2"],"sources":["/Users/positive-yeon/Downloads/cursor-talk-to-figma-mcp-main/node_modules/react-native-reanimated/lib/module/reanimated2/platform-specific/checkCppVersion.ts"],"sourcesContent":["import { jsVersion } from './jsVersion';\n\nexport function checkCppVersion() {\n  const cppVersion = global._REANIMATED_VERSION_CPP;\n  if (cppVersion === undefined) {\n    throw new Error(\n      `[Reanimated] Couldn't determine the version of the native part of Reanimated. Did you forget to re-build the app after upgrading react-native-reanimated? If you use Expo Go, you must use the exact version which is bundled into Expo SDK.`\n    );\n  }\n  const ok = matchVersion(jsVersion, cppVersion);\n  if (!ok) {\n    throw new Error(\n      `[Reanimated] Mismatch between JavaScript part and native part of Reanimated (${jsVersion} vs. ${cppVersion}). Did you forget to re-build the app after upgrading react-native-reanimated? If you use Expo Go, you must downgrade to ${cppVersion} which is bundled into Expo SDK.`\n    );\n  }\n}\n\nexport function matchVersion(version1: string, version2: string) {\n  if (version1.match(/^\\d+\\.\\d+\\.\\d+$/) && version2.match(/^\\d+\\.\\d+\\.\\d+$/)) {\n    // x.y.z, compare only major and minor, skip patch\n    const [major1, minor1] = version1.split('.');\n    const [major2, minor2] = version2.split('.');\n    return major1 === major2 && minor1 === minor2;\n  } else {\n    // alpha, beta or rc, compare everything\n    return version1 === version2;\n  }\n}\n"],"mappings":"iEAAA,OAASA,SAAS,mBAElB,MAAO,SAAS,CAAAC,eAAeA,CAAA,CAAG,CAChC,GAAM,CAAAC,UAAU,CAAGC,MAAM,CAACC,uBAAuB,CACjD,GAAIF,UAAU,GAAKG,SAAS,CAAE,CAC5B,KAAM,IAAI,CAAAC,KAAK,CACZ,8OAA6O,CAC/O,CACH,CACA,GAAM,CAAAC,EAAE,CAAGC,YAAY,CAACR,SAAS,CAAEE,UAAU,CAAC,CAC9C,GAAI,CAACK,EAAE,CAAE,CACP,KAAM,IAAI,CAAAD,KAAK,CACZ,gFAA+EN,SAAU,QAAOE,UAAW,4HAA2HA,UAAW,kCAAiC,CACpR,CACH,CACF,CAEA,MAAO,SAAS,CAAAM,YAAYA,CAACC,QAAgB,CAAEC,QAAgB,CAAE,CAC/D,GAAID,QAAQ,CAACE,KAAK,CAAC,iBAAiB,CAAC,EAAID,QAAQ,CAACC,KAAK,CAAC,iBAAiB,CAAC,CAAE,CAE1E,IAAAC,eAAA,CAAyBH,QAAQ,CAACI,KAAK,CAAC,GAAG,CAAC,CAAAC,gBAAA,CAAAC,cAAA,CAAAH,eAAA,IAArCI,MAAM,CAAAF,gBAAA,IAAEG,MAAM,CAAAH,gBAAA,IACrB,IAAAI,eAAA,CAAyBR,QAAQ,CAACG,KAAK,CAAC,GAAG,CAAC,CAAAM,gBAAA,CAAAJ,cAAA,CAAAG,eAAA,IAArCE,MAAM,CAAAD,gBAAA,IAAEE,MAAM,CAAAF,gBAAA,IACrB,MAAO,CAAAH,MAAM,GAAKI,MAAM,EAAIH,MAAM,GAAKI,MAAM,CAC/C,CAAC,IAAM,CAEL,MAAO,CAAAZ,QAAQ,GAAKC,QAAQ,CAC9B,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}