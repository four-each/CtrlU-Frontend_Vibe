{"ast":null,"code":"function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import RNFlatList from\"react-native-web/dist/exports/FlatList\";import RNSwitch from\"react-native-web/dist/exports/Switch\";import RNTextInput from\"react-native-web/dist/exports/TextInput\";import RNScrollView from\"react-native-web/dist/exports/ScrollView\";import View from\"react-native-web/dist/exports/View\";import createNativeWrapper from\"../handlers/createNativeWrapper\";export var ScrollView=createNativeWrapper(RNScrollView,{disallowInterruption:false});export var Switch=createNativeWrapper(RNSwitch,{shouldCancelWhenOutside:false,shouldActivateOnStart:true,disallowInterruption:true});export var TextInput=createNativeWrapper(RNTextInput);export var DrawerLayoutAndroid=function DrawerLayoutAndroid(){console.warn('DrawerLayoutAndroid is not supported on web!');return React.createElement(View,null);};export var RefreshControl=createNativeWrapper(View);export var FlatList=React.forwardRef(function(props,ref){return React.createElement(RNFlatList,_extends({ref:ref},props,{renderScrollComponent:function renderScrollComponent(scrollProps){return React.createElement(ScrollView,scrollProps);}}));});","map":{"version":3,"names":["React","RNFlatList","RNSwitch","RNTextInput","RNScrollView","View","createNativeWrapper","ScrollView","disallowInterruption","Switch","shouldCancelWhenOutside","shouldActivateOnStart","TextInput","DrawerLayoutAndroid","console","warn","createElement","RefreshControl","FlatList","forwardRef","props","ref","_extends","renderScrollComponent","scrollProps"],"sources":["/Users/positive-yeon/Downloads/cursor-talk-to-figma-mcp-main/node_modules/react-native-gesture-handler/lib/module/components/GestureComponents.web.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  FlatList as RNFlatList,\n  Switch as RNSwitch,\n  TextInput as RNTextInput,\n  ScrollView as RNScrollView,\n  FlatListProps,\n  View,\n} from 'react-native';\n\nimport createNativeWrapper from '../handlers/createNativeWrapper';\n\nexport const ScrollView = createNativeWrapper(RNScrollView, {\n  disallowInterruption: false,\n});\n\nexport const Switch = createNativeWrapper(RNSwitch, {\n  shouldCancelWhenOutside: false,\n  shouldActivateOnStart: true,\n  disallowInterruption: true,\n});\nexport const TextInput = createNativeWrapper(RNTextInput);\nexport const DrawerLayoutAndroid = () => {\n  console.warn('DrawerLayoutAndroid is not supported on web!');\n  return <View />;\n};\n\n// RefreshControl is implemented as a functional component, rendering a View\n// NativeViewGestureHandler needs to set a ref on its child, which cannot be done\n// on functional components\nexport const RefreshControl = createNativeWrapper(View);\n\nexport const FlatList = React.forwardRef(\n  <ItemT extends any>(props: FlatListProps<ItemT>, ref: any) => (\n    <RNFlatList\n      ref={ref}\n      {...props}\n      renderScrollComponent={(scrollProps) => <ScrollView {...scrollProps} />}\n    />\n  )\n);\n"],"mappings":"uRAAA,MAAO,GAAK,CAAAA,KAAZ,KAAuB,OAAvB,QAAAC,UAAA,qDAAAC,QAAA,mDAAAC,WAAA,sDAAAC,YAAA,uDAAAC,IAAA,0CAUA,MAAO,CAAAC,mBAAP,uCAEA,MAAO,IAAM,CAAAC,UAAU,CAAGD,mBAAmB,CAACF,YAAD,CAAe,CAC1DI,oBAAoB,CAAE,KADoC,CAAf,CAAtC,CAIP,MAAO,IAAM,CAAAC,MAAM,CAAGH,mBAAmB,CAACJ,QAAD,CAAW,CAClDQ,uBAAuB,CAAE,KADyB,CAElDC,qBAAqB,CAAE,IAF2B,CAGlDH,oBAAoB,CAAE,IAH4B,CAAX,CAAlC,CAKP,MAAO,IAAM,CAAAI,SAAS,CAAGN,mBAAmB,CAACH,WAAD,CAArC,CACP,MAAO,IAAM,CAAAU,mBAAmB,CAAG,QAAtB,CAAAA,mBAAmBA,CAAA,CAAS,CACvCC,OAAO,CAACC,IAAR,CAAa,8CAAb,EACA,MAAO,CAAAf,KAAA,CAAAgB,aAAA,CAACX,IAAD,MAAP,CACD,CAHM,CAQP,MAAO,IAAM,CAAAY,cAAc,CAAGX,mBAAmB,CAACD,IAAD,CAA1C,CAEP,MAAO,IAAM,CAAAa,QAAQ,CAAGlB,KAAK,CAACmB,UAAN,CACtB,SAAoBC,KAApB,CAAiDC,GAAjD,QACE,CAAArB,KAAA,CAAAgB,aAAA,CAACf,UAAD,CAAAqB,QAAA,EACED,GAAG,CAAEA,GADP,EAEMD,KAFN,EAGEG,qBAAqB,CAAG,QAAxB,CAAAA,qBAAqBA,CAAGC,WAAD,QAAiB,CAAAxB,KAAA,CAAAgB,aAAA,CAACT,UAAD,CAAgBiB,WAAhB,GAH1C,GAFoB,GAAjB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}