{"ast":null,"code":"import{useEffect,useRef}from'react';import{makeMutable,subscribeForKeyboardEvents,unsubscribeFromKeyboardEvents}from\"../core\";import{KeyboardState}from\"../commonTypes\";var _worklet_6504538214951_init_data={code:\"function anonymous(state,height){const{keyboardEventData}=this._closure;keyboardEventData.state.value=state;keyboardEventData.height.value=height;}\",location:\"/Users/positive-yeon/Downloads/cursor-talk-to-figma-mcp-main/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useAnimatedKeyboard.js\"};var _worklet_3503671417656_init_data={code:\"function anonymous(state,height){const{_keyboardEventData}=this._closure;_keyboardEventData.state.value=state;_keyboardEventData.height.value=height;}\",location:\"/Users/positive-yeon/Downloads/cursor-talk-to-figma-mcp-main/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useAnimatedKeyboard.js\"};export function useAnimatedKeyboard(){var options=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{isStatusBarTranslucentAndroid:false};var ref=useRef(null);var listenerId=useRef(-1);var isSubscribed=useRef(false);if(ref.current===null){var keyboardEventData={state:makeMutable(KeyboardState.UNKNOWN),height:makeMutable(0)};listenerId.current=subscribeForKeyboardEvents(function(){var _f=function _f(state,height){keyboardEventData.state.value=state;keyboardEventData.height.value=height;};_f._closure={keyboardEventData:keyboardEventData};_f.__initData=_worklet_6504538214951_init_data;_f.__workletHash=6504538214951;return _f;}(),options);ref.current=keyboardEventData;isSubscribed.current=true;}useEffect(function(){if(isSubscribed.current===false&&ref.current!==null){var _keyboardEventData=ref.current;listenerId.current=subscribeForKeyboardEvents(function(){var _f=function _f(state,height){_keyboardEventData.state.value=state;_keyboardEventData.height.value=height;};_f._closure={_keyboardEventData:_keyboardEventData};_f.__initData=_worklet_3503671417656_init_data;_f.__workletHash=3503671417656;return _f;}(),options);isSubscribed.current=true;}return function(){unsubscribeFromKeyboardEvents(listenerId.current);isSubscribed.current=false;};},[]);return ref.current;}","map":{"version":3,"names":["useEffect","useRef","makeMutable","subscribeForKeyboardEvents","unsubscribeFromKeyboardEvents","KeyboardState","_worklet_6504538214951_init_data","code","location","_worklet_3503671417656_init_data","useAnimatedKeyboard","options","arguments","length","undefined","isStatusBarTranslucentAndroid","ref","listenerId","isSubscribed","current","keyboardEventData","state","UNKNOWN","height","_f","value","_closure","__initData","__workletHash","_keyboardEventData"],"sources":["/Users/positive-yeon/Downloads/cursor-talk-to-figma-mcp-main/node_modules/react-native-reanimated/lib/module/reanimated2/hook/useAnimatedKeyboard.ts"],"sourcesContent":["import { useEffect, useRef } from 'react';\nimport {\n  makeMutable,\n  subscribeForKeyboardEvents,\n  unsubscribeFromKeyboardEvents,\n} from '../core';\nimport {\n  AnimatedKeyboardInfo,\n  AnimatedKeyboardOptions,\n  KeyboardState,\n} from '../commonTypes';\n\nexport function useAnimatedKeyboard(\n  options: AnimatedKeyboardOptions = { isStatusBarTranslucentAndroid: false }\n): AnimatedKeyboardInfo {\n  const ref = useRef<AnimatedKeyboardInfo | null>(null);\n  const listenerId = useRef<number>(-1);\n  const isSubscribed = useRef<boolean>(false);\n\n  if (ref.current === null) {\n    const keyboardEventData: AnimatedKeyboardInfo = {\n      state: makeMutable<KeyboardState>(KeyboardState.UNKNOWN),\n      height: makeMutable(0),\n    };\n    listenerId.current = subscribeForKeyboardEvents((state, height) => {\n      'worklet';\n      keyboardEventData.state.value = state;\n      keyboardEventData.height.value = height;\n    }, options);\n    ref.current = keyboardEventData;\n    isSubscribed.current = true;\n  }\n  useEffect(() => {\n    if (isSubscribed.current === false && ref.current !== null) {\n      const keyboardEventData = ref.current;\n      // subscribe again after Fast Refresh\n      listenerId.current = subscribeForKeyboardEvents((state, height) => {\n        'worklet';\n        keyboardEventData.state.value = state;\n        keyboardEventData.height.value = height;\n      }, options);\n      isSubscribed.current = true;\n    }\n    return () => {\n      unsubscribeFromKeyboardEvents(listenerId.current);\n      isSubscribed.current = false;\n    };\n  }, []);\n  return ref.current;\n}\n"],"mappings":"AAAA,OAASA,SAAS,CAAEC,MAAM,KAAQ,OAAO,CACzC,OACEC,WAAW,CACXC,0BAA0B,CAC1BC,6BAA6B,eAE/B,OAGEC,aAAa,sBACQ,IAAAC,gCAAA,EAAAC,IAAA,uJAAAC,QAAA,6JAAAC,gCAAA,EAAAF,IAAA,0JAAAC,QAAA,yJAEvB,MAAO,SAAS,CAAAE,mBAAmBA,CAAA,CAEX,IADtB,CAAAC,OAAgC,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAEG,6BAA6B,CAAE,KAAM,CAAC,CAE3E,GAAM,CAAAC,GAAG,CAAGf,MAAM,CAA8B,IAAI,CAAC,CACrD,GAAM,CAAAgB,UAAU,CAAGhB,MAAM,CAAS,CAAC,CAAC,CAAC,CACrC,GAAM,CAAAiB,YAAY,CAAGjB,MAAM,CAAU,KAAK,CAAC,CAE3C,GAAIe,GAAG,CAACG,OAAO,GAAK,IAAI,CAAE,CACxB,GAAM,CAAAC,iBAAuC,CAAG,CAC9CC,KAAK,CAAEnB,WAAW,CAAgBG,aAAa,CAACiB,OAAO,CAAC,CACxDC,MAAM,CAAErB,WAAW,CAAC,CAAC,CACvB,CAAC,CACDe,UAAU,CAACE,OAAO,CAAGhB,0BAA0B,gBAAAqB,EAAA,UAAAA,GAAEH,KAAK,CAAEE,MAAM,CAAK,CAEjEH,iBAAiB,CAACC,KAAK,CAACI,KAAK,CAAGJ,KAAK,CACrCD,iBAAiB,CAACG,MAAM,CAACE,KAAK,CAAGF,MAAM,CACzC,CAAC,CAAAC,EAAA,CAAAE,QAAA,EAAAN,iBAAA,CAtBLA,iBAGE,EAAAI,EAAA,CAAAG,UAAA,CAAArB,gCAAA,CAAAkB,EAAA,CAAAI,aAAA,sBAAAJ,EAAA,KAmBKb,OAAO,CAAC,CACXK,GAAG,CAACG,OAAO,CAAGC,iBAAiB,CAC/BF,YAAY,CAACC,OAAO,CAAG,IAAI,CAC7B,CACAnB,SAAS,CAAC,UAAM,CACd,GAAIkB,YAAY,CAACC,OAAO,GAAK,KAAK,EAAIH,GAAG,CAACG,OAAO,GAAK,IAAI,CAAE,CAC1D,GAAM,CAAAC,kBAAiB,CAAGJ,GAAG,CAACG,OAAO,CAErCF,UAAU,CAACE,OAAO,CAAGhB,0BAA0B,gBAAAqB,EAAA,UAAAA,GAAEH,KAAK,CAAEE,MAAM,CAAK,CAEjEH,kBAAiB,CAACC,KAAK,CAACI,KAAK,CAAGJ,KAAK,CACrCD,kBAAiB,CAACG,MAAM,CAACE,KAAK,CAAGF,MAAM,CACzC,CAAC,CAAAC,EAAA,CAAAE,QAAA,EAAAG,kBAAA,CAlCPA,kBAGE,EAAAL,EAAA,CAAAG,UAAA,CAAAlB,gCAAA,CAAAe,EAAA,CAAAI,aAAA,sBAAAJ,EAAA,KA+BOb,OAAO,CAAC,CACXO,YAAY,CAACC,OAAO,CAAG,IAAI,CAC7B,CACA,MAAO,WAAM,CACXf,6BAA6B,CAACa,UAAU,CAACE,OAAO,CAAC,CACjDD,YAAY,CAACC,OAAO,CAAG,KAAK,CAC9B,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CACN,MAAO,CAAAH,GAAG,CAACG,OAAO,CACpB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}